spring.data.mongodb.database=${MONGODB_DBNAME:}
spring.data.mongodb.uri=${MONGODB_URI:}
payment.instrument.uri=${PAYMENT_INSTRUMENT_URI:}
onboarding.uri=${ONBOARDING_URI:}
iban.uri=${IBAN_URI}
spring.application.name=idpay-wallet
spring.config.activate.on-profile=default
spring.cloud.stream.function.definition=walletQueue;consumerIban
spring.cloud.stream.bindings.walletQueue-out-0.destination=${KAFKA_TOPIC_IBAN:}
spring.cloud.stream.bindings.walletQueue-out-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.walletQueue-out-0.binder=kafka-iban
spring.cloud.stream.bindings.walletQueue-out-1.destination=${KAFKA_TOPIC_TIMELINE:}
spring.cloud.stream.bindings.walletQueue-out-1.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.walletQueue-out-1.binder=kafka-timeline
spring.cloud.stream.bindings.walletQueue-in-0.destination=${KAFKA_TOPIC_OUTCOME:}
spring.cloud.stream.bindings.walletQueue-in-0.group=${KAFKA_OUTCOME_GROUP_IN:}
spring.cloud.stream.bindings.walletQueue-in-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.walletQueue-in-0.binder=kafka-outcome
spring.cloud.stream.bindings.consumerIban-in-0.destination=${KAFKA_TOPIC_CHECKIBAN_OUTCOME:}
spring.cloud.stream.bindings.consumerIban-in-0.group=${KAFKA_CHECKIBAN_OUTCOME_GROUP_IN:}
spring.cloud.stream.bindings.consumerIban-in-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.consumerIban-in-0.binder=kafka-checkiban-outcome
spring.cloud.stream.binders.kafka-iban.type=kafka
spring.cloud.stream.binders.kafka-iban.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${KAFKA_IBAN_SASL_JAAS_CONFIG:}
spring.cloud.stream.binders.kafka-iban.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
spring.cloud.stream.binders.kafka-checkiban-outcome.type=kafka
spring.cloud.stream.binders.kafka-checkiban-outcome.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${KAFKA_CHECKIBAN_OUTCOME_SASL_JAAS_CONFIG:}
spring.cloud.stream.binders.kafka-checkiban-outcome.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
spring.cloud.stream.binders.kafka-outcome.type=kafka
spring.cloud.stream.binders.kafka-outcome.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${KAFKA_OUTCOME_SASL_JAAS_CONFIG:}
spring.cloud.stream.binders.kafka-outcome.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
spring.cloud.stream.binders.kafka-timeline.type=kafka
spring.cloud.stream.binders.kafka-timeline.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${KAFKA_TIMELINE_SASL_JAAS_CONFIG:}
spring.cloud.stream.binders.kafka-timeline.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.kafka.binder.configuration.heartbeat.interval.ms=30000
spring.cloud.stream.kafka.binder.configuration.session.timeout.ms=60000
spring.cloud.stream.kafka.binder.configuration.sasl.mechanism=${KAFKA_SASL_MECHANISM:}
spring.cloud.stream.kafka.binder.configuration.security.protocol=${KAFKA_SECURITY_PROTOCOL:}
spring.cloud.stream.kafka.binder.consumerProperties.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.consumerProperties.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.consumerProperties.socket.connection.setup.timeout.max.ms=200000
spring.cloud.stream.kafka.binder.consumerProperties.socket.connection.setup.timeout.ms=100000
spring.cloud.stream.kafka.binder.consumerProperties.connections.max.idle.ms=300000
rest-client.payment.intrument.serviceCode=idpay-payment-instrument
rest-client.onboarding.serviceCode=idpay-onboarding

logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.it.gov.pagopa=${LOG_LEVEL_PAGOPA:DEBUG}
logging.level.org.springframework.cloud=${LOG_LEVEL_SPRING_CLOUD:WARN}
logging.level.org.springframework.data=${LOG_LEVEL_SPRING_DATA:INFO}
logging.level.org.springframework.boot=${LOG_LEVEL_SPRING_BOOT:INFO}