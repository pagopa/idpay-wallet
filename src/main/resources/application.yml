iban:
  uri: ${IBAN_URI}
logging:
  level:
    it:
      gov:
        pagopa: ${LOG_LEVEL_PAGOPA:DEBUG}
    org:
      springframework:
        boot: ${LOG_LEVEL_SPRING_BOOT:INFO}
        cloud: ${LOG_LEVEL_SPRING_CLOUD:WARN}
        data: ${LOG_LEVEL_SPRING_DATA:INFO}
    root: ${LOG_LEVEL_ROOT:INFO}
onboarding:
  uri: ${ONBOARDING_URI:}
payment:
  instrument:
    uri: ${PAYMENT_INSTRUMENT_URI:}
rest-client:
  onboarding:
    serviceCode: idpay-onboarding
  payment:
    intrument:
      serviceCode: idpay-payment-instrument
spring:
  application:
    name: idpay-wallet
  cloud:
    stream:
      binders:
        kafka-checkiban-outcome:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: ${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
                      configuration:
                        sasl:
                          jaas:
                            config: ${KAFKA_CHECKIBAN_OUTCOME_SASL_JAAS_CONFIG:}
        kafka-iban:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: ${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
                      configuration:
                        sasl:
                          jaas:
                            config: ${KAFKA_IBAN_SASL_JAAS_CONFIG:}
        kafka-outcome:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: ${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
                      configuration:
                        sasl:
                          jaas:
                            config: ${KAFKA_OUTCOME_SASL_JAAS_CONFIG:}
        kafka-re:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: ${KAFKA_BINDER_BROKER_ENDPOINT_RULE_ENGINE:}
                      configuration:
                        sasl:
                          jaas:
                            config: ${KAFKA_RULE_ENGINE_SASL_JAAS_CONFIG:}
        kafka-timeline:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: ${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
                      configuration:
                        sasl:
                          jaas:
                            config: ${KAFKA_TIMELINE_SASL_JAAS_CONFIG:}
        kafka-notification:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: ${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
                      configuration:
                        sasl:
                          jaas:
                            config: ${KAFKA_NOTIFICATION_SASL_JAAS_CONFIG:}
      bindings:
        consumerIban-in-0:
          binder: kafka-checkiban-outcome
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_TOPIC_CHECKIBAN_OUTCOME:}
          group: ${KAFKA_CHECKIBAN_OUTCOME_GROUP_IN:}
        consumerOutcome-in-0:
          binder: kafka-outcome
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_TOPIC_OUTCOME:}
          group: ${KAFKA_OUTCOME_GROUP_IN:}
        walletQueue-out-0:
          binder: kafka-iban
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_TOPIC_IBAN:}
        walletQueue-out-1:
          binder: kafka-timeline
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_TOPIC_TIMELINE:}
        walletQueue-out-2:
          binder: kafka-notification
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_TOPIC_NOTIFICATION:}
        trxConsumer-in-0:
          binder: kafka-re
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_TOPIC_RULE_ENGINE:}
          group: ${KAFKA_RULE_ENGINE_GROUP_IN:}
      function:
        definition: walletQueue;consumerIban;trxConsumer;consumerOutcome
      kafka:
        binder:
          auto-create-topics: false
          configuration:
            heartbeat.interval.ms: ${KAFKA_CONFIG_HEARTBEAT_INTERVAL_MS:30000}
            session.timeout.ms: ${KAFKA_CONFIG_SESSION_TIMEOUT_MS:60000}
            request.timeout.ms: ${KAFKA_CONFIG_REQUEST_TIMEOUT_MS:60000}
            sasl.mechanism: ${KAFKA_CONFIG_SASL_MECHANISM:PLAIN}
            security.protocol: ${KAFKA_CONFIG_SECURITY_PROTOCOL:SASL_SSL}
        bindings:
          consumerIban-in-0:
            consumer:
              startOffset: ${KAFKA_IBAN_REQUEST_START_OFFSET:${KAFKA_CONSUMER_CONFIG_START_OFFSET:earliest}}
              autoCommitOffset: ${KAFKA_IBAN_AUTO_COMMIT:${KAFKA_CONSUMER_CONFIG_AUTO_COMMIT:true}}
              #enableDlq: ${KAFKA_IBAN_ENABLE_DLQ:${KAFKA_CONSUMER_CONFIG_ENABLE_DLQ:false}}
              #dlqName: ${KAFKA_IBAN_DLQ_NAME:${KAFKA_CONSUMER_CONFIG_DLQ_NAME:errorTopic}}
              standardHeaders: ${KAFKA_IBAN_STANDARD_HEADERS:${KAFKA_CONSUMER_CONFIG_STANDARD_HEADERS:both}}
              configuration:
                max.poll:
                  records: ${KAFKA_IBAN_MAX_POLL_SIZE:${KAFKA_CONSUMER_CONFIG_MAX_POLL_SIZE:500}}
                  interval.ms: ${KAFKA_IBAN_INTERVAL_TIMEOUT_MS:${KAFKA_CONFIG_MAX_POLL_INTERVAL_TIMEOUT_MS:300000}}
                connections.max.idle.ms: ${KAFKA_IBAN_REQUEST_CONNECTIONS_MAX_IDLE_MS:${KAFKA_CONSUMER_CONFIG_CONNECTIONS_MAX_IDLE_MS:300000}}
                socket.connection.setup.timeout:
                  max.ms: ${KAFKA_IBAN_REQUEST_CONNECTION_TIMEOUT_MAX_MS:${KAFKA_CONSUMER_CONFIG_CONNECTION_TIMEOUT_MAX_MS:200000}}
                  ms: ${KAFKA_IBAN_REQUEST_CONNECTION_TIMEOUT_MS:${KAFKA_CONSUMER_CONFIG_CONNECTION_TIMEOUT_MS:100000}}
          consumerOutcome-in-0:
            consumer:
              startOffset: ${KAFKA_WALLET_REQUEST_START_OFFSET:${KAFKA_CONSUMER_CONFIG_START_OFFSET:earliest}}
              autoCommitOffset: ${KAFKA_WALLET_AUTO_COMMIT:${KAFKA_CONSUMER_CONFIG_AUTO_COMMIT:true}}
              #enableDlq: ${KAFKA_WALLET_ENABLE_DLQ:${KAFKA_CONSUMER_CONFIG_ENABLE_DLQ:false}}
              #dlqName: ${KAFKA_WALLET_DLQ_NAME:${KAFKA_CONSUMER_CONFIG_DLQ_NAME:errorTopic}}
              standardHeaders: ${KAFKA_WALLET_STANDARD_HEADERS:${KAFKA_CONSUMER_CONFIG_STANDARD_HEADERS:both}}
              configuration:
                max.poll:
                  records: ${KAFKA_WALLET_MAX_POLL_SIZE:${KAFKA_CONSUMER_CONFIG_MAX_POLL_SIZE:500}}
                  interval.ms: ${KAFKA_WALLET_INTERVAL_TIMEOUT_MS:${KAFKA_CONFIG_MAX_POLL_INTERVAL_TIMEOUT_MS:300000}}
                connections.max.idle.ms: ${KAFKA_WALLET_REQUEST_CONNECTIONS_MAX_IDLE_MS:${KAFKA_CONSUMER_CONFIG_CONNECTIONS_MAX_IDLE_MS:300000}}
                socket.connection.setup.timeout:
                  max.ms: ${KAFKA_WALLET_REQUEST_CONNECTION_TIMEOUT_MAX_MS:${KAFKA_CONSUMER_CONFIG_CONNECTION_TIMEOUT_MAX_MS:200000}}
                  ms: ${KAFKA_WALLET_REQUEST_CONNECTION_TIMEOUT_MS:${KAFKA_CONSUMER_CONFIG_CONNECTION_TIMEOUT_MS:100000}}
          trxConsumer-in-0:
            consumer:
              startOffset: ${KAFKA_TRANSACTION_REQUEST_START_OFFSET:${KAFKA_CONSUMER_CONFIG_START_OFFSET:earliest}}
              autoCommitOffset: ${KAFKA_TRANSACTION_AUTO_COMMIT:${KAFKA_CONSUMER_CONFIG_AUTO_COMMIT:true}}
              #enableDlq: ${KAFKA_TRANSACTION_ENABLE_DLQ:${KAFKA_CONSUMER_CONFIG_ENABLE_DLQ:false}}
              #dlqName: ${KAFKA_TRANSACTION_DLQ_NAME:${KAFKA_CONSUMER_CONFIG_DLQ_NAME:errorTopic}}
              standardHeaders: ${KAFKA_TRANSACTION_STANDARD_HEADERS:${KAFKA_CONSUMER_CONFIG_STANDARD_HEADERS:both}}
              configuration:
                max.poll:
                  records: ${KAFKA_TRANSACTION_MAX_POLL_SIZE:${KAFKA_CONSUMER_CONFIG_MAX_POLL_SIZE:500}}
                  interval.ms: ${KAFKA_TRANSACTION_INTERVAL_TIMEOUT_MS:${KAFKA_CONFIG_MAX_POLL_INTERVAL_TIMEOUT_MS:300000}}
                connections.max.idle.ms: ${KAFKA_TRANSACTION_REQUEST_CONNECTIONS_MAX_IDLE_MS:${KAFKA_CONSUMER_CONFIG_CONNECTIONS_MAX_IDLE_MS:300000}}
                socket.connection.setup.timeout:
                  max.ms: ${KAFKA_TRANSACTION_REQUEST_CONNECTION_TIMEOUT_MAX_MS:${KAFKA_CONSUMER_CONFIG_CONNECTION_TIMEOUT_MAX_MS:200000}}
                  ms: ${KAFKA_TRANSACTION_REQUEST_CONNECTION_TIMEOUT_MS:${KAFKA_CONSUMER_CONFIG_CONNECTION_TIMEOUT_MS:100000}}
  config:
    activate:
      on-profile: default
  data:
    mongodb:
      database: ${MONGODB_DBNAME:}
      uri: ${MONGODB_URI:}
