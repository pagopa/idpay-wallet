{
	"info": {
		"_postman_id": "63b018ca-193e-4cef-a59b-265edd5654bb",
		"name": "Wallet - e2e",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26036736",
		"_collection_link": "https://idpay-test-funzionali.postman.co/workspace/IDPay-Test-Funzionali~d5f80577-ab5d-4d50-87c4-a81b6bcba6bc/collection/26036679-9ddbb611-23e7-4aae-a078-6af62d717cd7?action=share&source=collection_link&creator=26036736"
	},
	"item": [
		{
			"name": "Happy Case",
			"item": [
				{
					"name": "Initiative discount - unsubscribe",
					"item": [
						{
							"name": "Initiative creation",
							"item": [
								{
									"name": "ENTE - Initiative creation",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Happy case - Initiative discount - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"aud\": \"idpay.welfare.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n    \"orgRole\": \"{{orgRole_Ente}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP1-Insert Initiative (Service Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"let moment = require('moment');\r",
															"const now = String(moment().format('DD-MM-YYYY hh:mm'));\r",
															"const serviceName = 'Test funzionali App IO Initiative with criteria and discount ' + now;\r",
															"pm.collectionVariables.set('serviceName', serviceName);\r",
															"pm.collectionVariables.set('description', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"\r",
															"pm.collectionVariables.set('channel_type', 'web');\r",
															"pm.collectionVariables.set('channel_contact', pm.variables.replaceIn('{{$randomUrl}}'));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);\r",
															"// console.log('jsondata', jsonData);\r",
															"// console.log('jsondata.initiativeId', jsonData.initiativeId);\r",
															"pm.collectionVariables.set('initiativeId_exhausted', jsonData.initiativeId);\r",
															"\r",
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP1 - Responses with 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP1 - Verify response body\", function () {\r",
															"    let jsonResponse = pm.response.json();\r",
															"    pm.expect(jsonResponse).have.property(\"initiativeId\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceIO\": true,\n    \"serviceName\": \"{{serviceName}}\",\n    \"serviceScope\": \"LOCAL\",\n    \"description\": \"{{description}}\",\n    \"privacyLink\": \"https://www.google.it\",\n    \"tcLink\": \"https://www.google.com\",\n    \"channels\": [\n        {\n            \"type\": \"{{channel_type}}\",\n            \"contact\": \"{{channel_contact}}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/info",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"info"
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										},
										{
											"name": "STEP2-Update Initiative (general Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"let moment = require('moment');\r",
															"//Format: YYYY-MM-DD\r",
															"let today = String(moment().format('YYYY-MM-DD'));\r",
															"let todayP1 = String(moment().add(1,'months').format('YYYY-MM-DD'));\r",
															"let todayP2 = String(moment().add(2,'months').format('YYYY-MM-DD'));\r",
															"let todayP3 = String(moment().add(3,'months').format('YYYY-MM-DD'));\r",
															"\r",
															"let yesterday = String(moment().subtract(1, 'days').format('YYYY-MM-DD'));\r",
															"\r",
															"\r",
															"/*\r",
															"var futureDate = pm.variables.replaceIn('{{$$randomDateFuture}}');\r",
															"pm.collectionVariables.set('...', _.random(0, 180));\r",
															"*/\r",
															"//_.floor(_.random(1.0, 100000.0, true),2)\r",
															"pm.collectionVariables.set('budget', 500);\r",
															"pm.collectionVariables.set('beneficiaryType', 'PF');\r",
															"//pm.collectionVariables.set('beneficiaryKnown', pm.variables.replaceIn('{{$randomBoolean}}'));\r",
															"pm.collectionVariables.set('beneficiaryKnown', false);\r",
															"pm.collectionVariables.set('rankingEnabled', false);\r",
															"pm.collectionVariables.set('beneficiaryBudget', 100);//default max 1000\r",
															"pm.collectionVariables.set('rankingStartDate', today);\r",
															"pm.collectionVariables.set('rankingEndDate', todayP1);\r",
															"pm.collectionVariables.set('startDate', today);\r",
															"pm.collectionVariables.set('endDate', todayP3);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP2 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"budget\": {{budget}},\n    \"beneficiaryType\": \"{{beneficiaryType}}\",\n    \"beneficiaryKnown\": {{beneficiaryKnown}},\n    \"rankingEnabled\": {{rankingEnabled}},\n    \"beneficiaryBudget\": {{beneficiaryBudget}},\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\",\n    \"descriptionMap\": {\n        \"it\": \"it\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId_exhausted/general",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId_exhausted",
														"general"
													],
													"variable": [
														{
															"key": "initiativeId_exhausted",
															"value": "{{initiativeId_exhausted}}"
														}
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										},
										{
											"name": "STEP3-Update Initiative (criteria)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP3 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"automatedCriteria\": [\r\n        {\r\n            \"authority\": \"INPS\",\r\n            \"code\": \"ISEE\",\r\n            \"operator\": \"GT\",\r\n            \"value\": \"1\",\r\n            \"value2\": \"\",\r\n            \"iseeTypes\": [\r\n                \"ORDINARIO\",\r\n                \"MINORENNE\",\r\n                \"UNIVERSITARIO\",\r\n                \"SOCIOSANITARIO\",\r\n                \"DOTTORATO\",\r\n                \"RESIDENZIALE\",\r\n                \"CORRENTE\"\r\n            ]\r\n        }\r\n    ],\r\n    \"selfDeclarationCriteria\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId_exhausted}}/beneficiary",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId_exhausted}}",
														"beneficiary"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP4-Update Initiative Trx-Reward rules",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP4 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(()=> {}, 15000)\r",
															"const d = new Date();\r",
															"dateString = d.toISOString()\r",
															"let endTime = dateString.split('T');\r",
															"endTime = endTime[1].split('Z');\r",
															"\r",
															"pm.collectionVariables.set('rewardRuleType', 'rewardValue');\r",
															"const rewardValueTypes = [\"PERCENTAGE\", \"ABSOLUTE\"];\r",
															"rewardValueTypeRandomIndex = _.random(0, rewardValueTypes.length - 1);\r",
															"const selectedRewardValueType = rewardValueTypes[rewardValueTypeRandomIndex];\r",
															"pm.collectionVariables.set('rewardValueType', selectedRewardValueType);\r",
															"if (selectedRewardValueType == \"PERCENTAGE\") {\r",
															"    pm.collectionVariables.set('rewardRuleValue', 100);\r",
															"} else {\r",
															"    pm.collectionVariables.set('rewardRuleValue', 50);\r",
															"}\r",
															"\r",
															"pm.collectionVariables.set('trxDaysOfWeek', pm.variables.replaceIn('{{$randomWeekday}}').toString().toUpperCase());\r",
															"pm.collectionVariables.set('trxDayEndTime', endTime[0]);\r",
															"pm.collectionVariables.set('trxThresholdFrom', 50);\r",
															"pm.collectionVariables.set('trxThresholdTo', 80);\r",
															"pm.collectionVariables.set('trxCountFrom', 3);\r",
															"pm.collectionVariables.set('trxCountTo', 11);\r",
															"pm.collectionVariables.set('trxRewardLimitFrequency', 'DAILY');\r",
															"pm.collectionVariables.set('trxRewardLimitValue', 3);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"initiativeRewardType\": \"DISCOUNT\",\n  \"rewardRule\": {\n    \"_type\": \"{{rewardRuleType}}\",\n    \"rewardValue\": {{rewardRuleValue}},\n    \"rewardValueType\": \"{{rewardValueType}}\"\n  },\n  \"trxRule\": {\n      \"threshold\": {\n      \"from\": {{trxThresholdFrom}},\n      \"fromIncluded\": true,\n      \"to\": {{trxThresholdTo}},\n      \"toIncluded\": true\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId_exhausted/reward",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId_exhausted",
														"reward"
													],
													"variable": [
														{
															"key": "initiativeId_exhausted",
															"value": "{{initiativeId_exhausted}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP5-Update Initiative Refund Rule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP5 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"/*const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
															"timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"\r",
															"const accumulatedType = [\"BUDGET_EXHAUSTED\",\"THRESHOLD_REACHED\"];\r",
															"accumulatedTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"\r",
															"pm.collectionVariables.set('timeType', timeType[timeTypeRandomIndex]);\r",
															"pm.collectionVariables.set('accumulatedType', accumulatedType[accumulatedTypeRandomIndex]);\r",
															"pm.collectionVariables.set('identificationCode', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"*/\r",
															"\r",
															"/*\r",
															"let refundType = \"timeParameter\";\r",
															"refundTypeRandomIndex = _.random(0, refundType.length - 1);\r",
															"\r",
															"const refundTypeSelected = \"timeParameter\";\r",
															"let body = {};\r",
															"if (refundTypeSelected == \"timeParameter\") {\r",
															"    const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
															"    timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"    body = {\r",
															"        timeParameter: {\r",
															"            timeType: timeType[timeTypeRandomIndex]\r",
															"        }\r",
															"    };\r",
															"} else {\r",
															"    const accumulatedType = [\"BUDGET_EXHAUSTED\", \"THRESHOLD_REACHED\"];\r",
															"    accumulatedTypeRandomIndex = _.random(0, accumulatedType.length - 1);\r",
															"    const accumulatedTypeSelected = accumulatedType[accumulatedTypeRandomIndex];\r",
															"    if (accumulatedTypeSelected == \"BUDGET_EXHAUSTED\") {\r",
															"        body = {\r",
															"            accumulatedAmount: {\r",
															"                accumulatedType: \"BUDGET_EXHAUSTED\"\r",
															"            }\r",
															"        };\r",
															"    } else {\r",
															"        body = {\r",
															"            accumulatedAmount: {\r",
															"                accumulatedType: \"THRESHOLD_REACHED\",\r",
															"                refundThreshold: 10\r",
															"            }\r",
															"        };\r",
															"    }\r",
															"}\r",
															"*/\r",
															"/*const timeType = [\"CLOSED\", \"DAILY\", \"WEEKLY\", \"MONTHLY\", \"QUARTERLY\"];\r",
															"timeTypeRandomIndex = _.random(0, timeType.length - 1);\r",
															"const body = {\r",
															"    timeParameter: {\r",
															"        timeType: timeType[timeTypeRandomIndex]\r",
															"    }\r",
															"};\r",
															"pm.collectionVariables.set('body', JSON.stringify(body));\r",
															"*/"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\r\n     \"timeParameter\": {\r\n        \"timeType\": \"DAILY\"\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId_exhausted/refund",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId_exhausted",
														"refund"
													],
													"variable": [
														{
															"key": "initiativeId_exhausted",
															"value": "{{initiativeId_exhausted}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "PAGOPA - Initiative update status APPROVED",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Happy case - Initiative discount - Initiative updating - Generate Portal Token (PagoPA Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalTokenPagopa\", textResponse);\r",
															"});\r",
															"\r",
															"//response time is less than 1s\r",
															"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Pagopa}}\",\r\n  \"name\": \"{{name_Pagopa}}\",\r\n  \"familyName\": \"{{familyName_Pagopa}}\",\r\n  \"email\": \"{{email_Pagopa}}\",\r\n  \"orgId\": \"{{orgId_Pagopa}}\",\r\n  \"orgVAT\": \"{{orgVAT_Pagopa}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Pagopa}}\",\r\n  \"orgRole\": \"{{orgRole_Pagopa}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update initiative into APPROVED status",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative updating - PagoPA Admin updates initiative status into APPROVED -(Responses with 204)\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//setTimeout(function(){}, 20000); //milliseconds"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalTokenPagopa}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId_exhausted}}/approved",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId_exhausted}}",
														"approved"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ENTE - Initiative PUBLISHED",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Happy case - Initiative discount - Initiative pubblication - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															"\r",
															"//response time is less than 1s\r",
															"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"aud\": \"idpay.welfare.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n    \"orgRole\": \"{{orgRole_Ente}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Initiative PUBLISHED",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative pubblication - Ente Admin updates initiative status into PUBLISHED -(Responses with 204)\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"/*let body;\r",
															"baseUrlInitiative = pm.variables.get('baseUrlInitiative')\r",
															"if(baseUrlInitiative.includes('localhost')){\r",
															"    body = {\r",
															"        mode: 'raw',\r",
															"        raw: JSON.stringify({\r",
															"            organizationName: 'Comune di Milano',\r",
															"            organizationFiscalCode: '11122233344',\r",
															"            organizationUserId: 'b8986bf2-1f93-4827-ab16-b21eb8aeae2b',\r",
															"            organizationUserRole: 'admin'\r",
															"        })\r",
															"    }\r",
															"    pm.request.headers.add({\r",
															"        key: \"Content-Type\",\r",
															"        value: \"application/json\"\r",
															"    });\r",
															"    pm.variables.set('body', JSON.stringify(body));\r",
															"    pm.request.body.update(body);\r",
															"}\r",
															"*/"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId_exhausted}}/published",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId_exhausted}}",
														"published"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Upload csv",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Happy case - Initiative discount - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"aud\": \"idpay.welfare.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n    \"orgRole\": \"{{orgRole_Ente}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Upload csv",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Upload csv - Response status is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Wallet - Happy case - Initiative discount - Upload csv - Verify response body contains status: VALIDATED\", function () {\r",
															"    let jsonResponse = pm.response.json();\r",
															"    pm.expect(jsonResponse.status).eql(\"VALIDATED\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "./postman/Esercente di test IdPay.csv"
														}
													]
												},
												"url": {
													"raw": "{{baseUrlToken}}/merchant/initiative/{{initiativeId_exhausted}}/upload",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"merchant",
														"initiative",
														"{{initiativeId_exhausted}}",
														"upload"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Merchant list on initiative",
									"item": [
										{
											"name": "Get Merchant List",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Get merchant list - Response status is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Wallet - Happy case - Initiative discount - Get merchant list - Verify response body contains merchantId,businessName,fiscalCode,merchantStatus,updateStatusDate\", function () {\r",
															"\r",
															"    const response = pm.response.json().content[0];\r",
															"    pm.expect(response).have.property(\"merchantId\");\r",
															"    pm.expect(response).have.property(\"businessName\");\r",
															"    pm.expect(response).have.property(\"fiscalCode\");\r",
															"    pm.expect(response).have.property(\"merchantStatus\");\r",
															"    pm.expect(response).have.property(\"updateStatusDate\");\r",
															"\r",
															"    //const filterByMerchantId = response.filter(merchantId => merchantId.merchantId === pm.collectionVariables.get(\"merchantId\"));\r",
															"    pm.collectionVariables.set(\"merchantId\", response.merchantId);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 18000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrlMerchant}}/initiative/{{initiativeId_exhausted}}/merchants",
													"host": [
														"{{baseUrlMerchant}}"
													],
													"path": [
														"initiative",
														"{{initiativeId_exhausted}}",
														"merchants"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Onboarding",
							"item": [
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Initiative discount - Onboarding - Generate Token IO', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 5000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_fake}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Accept T&C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - Accept T&C - return status 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 15000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_exhausted}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Prerequisites Check",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - Prerequisites Check - return status 200 or 202\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200,202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_exhausted}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/initiative",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												"initiative"
											]
										}
									},
									"response": []
								},
								{
									"name": "PDND + Autocertification",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - PDND + Autocertification - return status 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_exhausted}}\",\r\n    \"pdndAccept\": true,\r\n    \"selfDeclarationList\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/consent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												"consent"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Unsubscribe Wallet & User",
							"item": [
								{
									"name": "Unsubscribe - Ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Initiative discount - Unsubscribed wallet & user - Unsubscribe - Response status is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_exhausted}}/unsubscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_exhausted}}",
												"unsubscribe"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status Ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Initiative discount - Unsubscribe wallet & user - Get wallet status - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Initiative discount - Unsubscribe wallet & user - Get wallet status - Wallet status is equals to UNSUBSCRIBED\", function () {\r",
													"    let responseJson = pm.response.json()\r",
													"    pm.expect(responseJson.status).to.be.equals('UNSUBSCRIBED');\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_exhausted}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_exhausted}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Status Onboarding - ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Initiative discount - Unsubscribe wallet & user - Get status onboarding - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"setTimeout(()=>{ \r",
													"\r",
													"pm.test(\"Wallet - Happy case - Initiative discount - Unsubscribe wallet & user - Get status onboarding - Onboarding status is equals to UNSUBSCRIBED\", function () {\r",
													"    let jsonResponse = pm.response.json()\r",
													"    pm.expect(jsonResponse.status).to.eql('UNSUBSCRIBED');\r",
													"});\r",
													" },2000)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 3000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/{{initiativeId_exhausted}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												"{{initiativeId_exhausted}}",
												"status"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Initiative",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy Case - Initiative discount - Delete Initiative - Status test 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative/idpay/initiative/{{initiativeId_exhausted}}",
									"host": [
										"{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative"
									],
									"path": [
										"idpay",
										"initiative",
										"{{initiativeId_exhausted}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Initiative with NF",
					"item": [
						{
							"name": "ENTE - Initiative creation",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll instrument - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.welfare.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n    \"orgRole\": \"{{orgRole_Ente}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlToken}}/welfare/token/test",
											"host": [
												"{{baseUrlToken}}"
											],
											"path": [
												"welfare",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "STEP1-Insert Initiative (Service Info)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//pm.collectionVariables.set('serviceId', pm.variables.replaceIn('{{$randomUUID}}'));\r",
													"let moment = require('moment');\r",
													"const now = String(moment().format('DD-MM-YYYY hh:mm'));\r",
													"const serviceName = 'Test funzionali App IO Wallet ' + now;\r",
													"pm.collectionVariables.set('serviceName', serviceName);\r",
													"\r",
													"pm.collectionVariables.set('description', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
													"\r",
													"pm.collectionVariables.set('channel_type', 'web');\r",
													"pm.collectionVariables.set('channel_contact', pm.variables.replaceIn('{{$randomUrl}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"// console.log('jsondata', jsonData);\r",
													"// console.log('jsondata.initiativeId', jsonData.initiativeId);\r",
													"pm.collectionVariables.set('initiativeId', jsonData.initiativeId);\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP1 - Status test 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP1 - Response body must contain initiativeId field\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse).have.property(\"initiativeId\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serviceIO\": true,\n    \"serviceName\": \"{{serviceName}}\",\n    \"serviceScope\": \"LOCAL\",\n    \"description\": \"{{description}}\",\n    \"privacyLink\": \"https://www.google.it\",\n    \"tcLink\": \"https://www.google.com\",\n    \"channels\": [\n        {\n            \"type\": \"{{channel_type}}\",\n            \"contact\": \"{{channel_contact}}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/info",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"info"
											]
										},
										"description": "Save initiative and first subset of data 'general info'"
									},
									"response": []
								},
								{
									"name": "STEP2-Update Initiative (general Info)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment');\r",
													"//Format: YYYY-MM-DD\r",
													"let today = String(moment().format('YYYY-MM-DD'));\r",
													"let todayP1 = String(moment().add(1,'months').format('YYYY-MM-DD'));\r",
													"let todayP2 = String(moment().add(2,'months').format('YYYY-MM-DD'));\r",
													"let todayP3 = String(moment().add(3,'months').format('YYYY-MM-DD'));\r",
													"\r",
													"/*\r",
													"var futureDate = pm.variables.replaceIn('{{$$randomDateFuture}}');\r",
													"pm.collectionVariables.set('...', _.random(0, 180));\r",
													"*/\r",
													"//_.floor(_.random(1.0, 100000.0, true),2)\r",
													"pm.collectionVariables.set('budget', _.floor(_.random(10000, 100000, true),2));\r",
													"pm.collectionVariables.set('beneficiaryType', 'NF');\r",
													"const familyUnitCompositionValue = [\"INPS\", \"ANPR\"];\r",
													"familyUnitCompositionRandomIndex = _.random(0, familyUnitCompositionValue.length - 1);\r",
													"const selectedFamilyUnitCompositionValue = familyUnitCompositionValue[familyUnitCompositionRandomIndex];\r",
													"pm.collectionVariables.set('familyUnitComposition', selectedFamilyUnitCompositionValue);\r",
													"//pm.collectionVariables.set('beneficiaryKnown', pm.variables.replaceIn('{{$randomBoolean}}'));\r",
													"pm.collectionVariables.set('beneficiaryKnown', false);\r",
													"pm.collectionVariables.set('rankingEnabled', false);\r",
													"pm.collectionVariables.set('beneficiaryBudget', pm.variables.replaceIn('{{$randomInt}}'));//default max 1000\r",
													"pm.collectionVariables.set('rankingStartDate', today);\r",
													"pm.collectionVariables.set('rankingEndDate', todayP1);\r",
													"pm.collectionVariables.set('startDate', todayP2);\r",
													"pm.collectionVariables.set('endDate', todayP3);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP2 - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"budget\": {{budget}},\n    \"beneficiaryType\": \"{{beneficiaryType}}\",\n    \"familyUnitComposition\": \"{{familyUnitComposition}}\",\n    \"beneficiaryKnown\": {{beneficiaryKnown}},\n    \"rankingEnabled\": {{rankingEnabled}},\n    \"beneficiaryBudget\": {{beneficiaryBudget}},\n    \"rankingStartDate\": \"{{rankingStartDate}}\",\n    \"rankingEndDate\": \"{{rankingEndDate}}\",\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\",\n    \"descriptionMap\": {\n        \"it\": \"it\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/:initiativeId/general",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												":initiativeId",
												"general"
											],
											"variable": [
												{
													"key": "initiativeId",
													"value": "{{initiativeId}}",
													"description": "(Required) The initiative ID"
												}
											]
										},
										"description": "Save initiative and first subset of data 'general info'"
									},
									"response": []
								},
								{
									"name": "STEP3-Update Initiative (criteria)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP3 - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"automatedCriteria\": [\r\n        {\r\n            \"authority\": \"INPS\",\r\n            \"code\": \"ISEE\",\r\n            \"operator\": \"GT\",\r\n            \"value\": \"1\",\r\n            \"value2\": \"\",\r\n            \"iseeTypes\": [\r\n                \"ORDINARIO\",\r\n                \"MINORENNE\",\r\n                \"UNIVERSITARIO\",\r\n                \"SOCIOSANITARIO\",\r\n                \"DOTTORATO\",\r\n                \"RESIDENZIALE\",\r\n                \"CORRENTE\"\r\n            ]\r\n        }\r\n    ],\r\n    \"selfDeclarationCriteria\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/{{initiativeId}}/beneficiary",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"{{initiativeId}}",
												"beneficiary"
											]
										}
									},
									"response": []
								},
								{
									"name": "STEP4-Update Initiative Trx-Reward rules",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP4 - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const d = new Date();\r",
													"dateString = d.toISOString()\r",
													"let endTime = dateString.split('T');\r",
													"endTime = endTime[1].split('Z');\r",
													"\r",
													"pm.collectionVariables.set('rewardRuleType', 'rewardValue');\r",
													"const rewardValueTypes = [\"PERCENTAGE\", \"ABSOLUTE\"];\r",
													"rewardValueTypeRandomIndex = _.random(0, rewardValueTypes.length - 1);\r",
													"const selectedRewardValueType = rewardValueTypes[rewardValueTypeRandomIndex];\r",
													"pm.collectionVariables.set('rewardValueType', selectedRewardValueType);\r",
													"if (selectedRewardValueType == \"PERCENTAGE\") {\r",
													"    pm.collectionVariables.set('rewardRuleValue', 100);\r",
													"} else {\r",
													"    pm.collectionVariables.set('rewardRuleValue', 1);\r",
													"}\r",
													"\r",
													"pm.collectionVariables.set('trxDaysOfWeek', pm.variables.replaceIn('{{$randomWeekday}}').toString().toUpperCase());\r",
													"pm.collectionVariables.set('trxDayEndTime', endTime[0]);\r",
													"pm.collectionVariables.set('trxThresholdFrom', 10);\r",
													"pm.collectionVariables.set('trxThresholdTo', 50);\r",
													"pm.collectionVariables.set('trxCountFrom', 3);\r",
													"pm.collectionVariables.set('trxCountTo', 11);\r",
													"pm.collectionVariables.set('trxRewardLimitFrequency', 'DAILY');\r",
													"pm.collectionVariables.set('trxRewardLimitValue', 3);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"initiativeRewardType\": \"REFUND\",\n    \"rewardRule\": {\n        \"_type\": \"{{rewardRuleType}}\",\n        \"rewardValue\": {{rewardRuleValue}},\n        \"rewardValueType\": \"{{rewardValueType}}\"\n    },\n    \"trxRule\": {\n        \"daysOfWeek\": [\n            {\n                \"daysOfWeek\": [\n                    \"{{trxDaysOfWeek}}\"\n                ],\n                \"intervals\": [\n                    {\n                        \"startTime\": \"00:00:00.000\",\n                        \"endTime\": \"{{trxDayEndTime}}\"\n                    }\n                ]\n            }\n        ],\n        \"threshold\": {\n            \"from\": {{trxThresholdFrom}},\n            \"fromIncluded\": true,\n            \"to\": {{trxThresholdTo}},\n            \"toIncluded\": true\n        },\n        \"mccFilter\": {\n            \"allowedList\": true,\n            \"values\": [\n                \"0742\",\n                \"0743\",\n                \"0744\"\n            ]\n        },\n        \"trxCount\": {\n            \"from\": {{trxCountFrom}},\n            \"fromIncluded\": true,\n            \"to\": {{trxCountTo}},\n            \"toIncluded\": true\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/:initiativeId/reward",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												":initiativeId",
												"reward"
											],
											"variable": [
												{
													"key": "initiativeId",
													"value": "{{initiativeId}}",
													"description": "(Required) The initiative ID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "STEP5-Update Initiative Refund Rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP5 - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/*const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
													"timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
													"\r",
													"const accumulatedType = [\"BUDGET_EXHAUSTED\",\"THRESHOLD_REACHED\"];\r",
													"accumulatedTypeRandomIndex = _.random(0, timeType.length-1);\r",
													"\r",
													"pm.collectionVariables.set('timeType', timeType[timeTypeRandomIndex]);\r",
													"pm.collectionVariables.set('accumulatedType', accumulatedType[accumulatedTypeRandomIndex]);\r",
													"pm.collectionVariables.set('identificationCode', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
													"*/\r",
													"\r",
													"\r",
													"let refundType = [\"timeParameter\", \"accumulatedAmount\"];\r",
													"refundTypeRandomIndex = _.random(0, refundType.length - 1);\r",
													"\r",
													"const refundTypeSelected = refundType[refundTypeRandomIndex];\r",
													"let body = {};\r",
													"if (refundTypeSelected == \"timeParameter\") {\r",
													"    const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
													"    timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
													"    body = {\r",
													"        timeParameter: {\r",
													"            timeType: timeType[timeTypeRandomIndex]\r",
													"        }\r",
													"    };\r",
													"} else {\r",
													"    const accumulatedType = [\"BUDGET_EXHAUSTED\", \"THRESHOLD_REACHED\"];\r",
													"    accumulatedTypeRandomIndex = _.random(0, accumulatedType.length - 1);\r",
													"    const accumulatedTypeSelected = accumulatedType[accumulatedTypeRandomIndex];\r",
													"    if (accumulatedTypeSelected == \"BUDGET_EXHAUSTED\") {\r",
													"        body = {\r",
													"            accumulatedAmount: {\r",
													"                accumulatedType: \"BUDGET_EXHAUSTED\"\r",
													"            }\r",
													"        };\r",
													"    } else {\r",
													"        body = {\r",
													"            accumulatedAmount: {\r",
													"                accumulatedType: \"THRESHOLD_REACHED\",\r",
													"                refundThreshold: 10\r",
													"            }\r",
													"        };\r",
													"    }\r",
													"}\r",
													"\r",
													"pm.collectionVariables.set('body', JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{body}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/:initiativeId/refund",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												":initiativeId",
												"refund"
											],
											"variable": [
												{
													"key": "initiativeId",
													"value": "{{initiativeId}}",
													"description": "(Required) The initiative ID"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PAGOPA - Initiative update status APPROVED",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll instrument - Initiative approving - Generate Portal Token (PagoPA Admin)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalTokenPagopa\", textResponse);\r",
													"});\r",
													"\r",
													"//response time is less than 1s\r",
													"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Pagopa}}\",\r\n  \"name\": \"{{name_Pagopa}}\",\r\n  \"familyName\": \"{{familyName_Pagopa}}\",\r\n  \"email\": \"{{email_Pagopa}}\",\r\n  \"orgId\": \"{{orgId_Pagopa}}\",\r\n  \"orgVAT\": \"{{orgVAT_Pagopa}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Pagopa}}\",\r\n  \"orgRole\": \"{{orgRole_Pagopa}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlToken}}/welfare/token/test",
											"host": [
												"{{baseUrlToken}}"
											],
											"path": [
												"welfare",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update initiative into APPROVED status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative approving - PagoPA Admin updates initiative status into APPROVED - (Responses with 204)\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function(){}, 20000); //milliseconds"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalTokenPagopa}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrlInitiative}}/{{initiativeId}}/approved",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"{{initiativeId}}",
												"approved"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ENTE - Initiative PUBLISHED",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Wallet - Happy case - Initiative pubblication - Generate Portal Token (Ente Admin)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													"\r",
													"//response time is less than 1s\r",
													"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Ente}}\",\r\n  \"name\": \"{{name_Ente}}\",\r\n  \"familyName\": \"{{familyName_Ente}}\",\r\n  \"email\": \"{{email_Ente}}\",\r\n  \"orgId\": \"{{orgId_Ente}}\",\r\n  \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n  \"orgRole\": \"{{orgRole_Ente}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlToken}}/welfare/token/test",
											"host": [
												"{{baseUrlToken}}"
											],
											"path": [
												"welfare",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Initiative PUBLISHED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Initiative pubblication - Ente Admin updates initiative status into PUBLISHED -(Responses with 204)\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 30000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrlInitiative}}/{{initiativeId}}/published",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"{{initiativeId}}",
												"published"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Onboarding User with NF",
							"item": [
								{
									"name": "mock family",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\"{{CF_fake}}\", \"{{CF_fake_2}}\"]"
										},
										"url": {
											"raw": "{{AKSAPIServerUrlGeneric}}/idpaymock/idpay/mock/family",
											"host": [
												"{{AKSAPIServerUrlGeneric}}"
											],
											"path": [
												"idpaymock",
												"idpay",
												"mock",
												"family"
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Enroll instrument - APP IO - Onboarding - Generate Token IO', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 5000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_fake}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Accept T&C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - APP IO - Onboarding - Accept T&C - Response status is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 25000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Prerequisites Check",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - APP IO - Onboarding - Prerequisites Check - Response status is 200,202\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200,202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/initiative",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												"initiative"
											]
										}
									},
									"response": []
								},
								{
									"name": "PDND + Autocertification",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - APP IO - Onboarding - PDND + Autocertification - Response status is 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\",\r\n    \"pdndAccept\": true,\r\n    \"selfDeclarationList\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/consent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												"consent"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Initiative with NF - Get wallet detail - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test('Wallet - Happy case - Initiative with NF - Get wallet detail - Checking amount corresponds to beneficiaryBudget', function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse.amount).eqls(parseInt(pm.collectionVariables.get('beneficiaryBudget')));\r",
													"});\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set('familyId', jsonData.familyId);\r",
													"\r",
													"pm.test('Wallet - Happy case - Initiative with NF - Get wallet detail - Checking familyId is present', function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse).have.property(\"familyId\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 20000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Onboarding User 2 with NF",
							"item": [
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Enroll instrument - APP IO - Onboarding - Generate Token IO', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 5000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake_2}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_fake_2}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Accept T&C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - APP IO - Onboarding - Accept T&C - Response status is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 5000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Prerequisites Check",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - APP IO - Onboarding - Prerequisites Check - Response status is 200,202\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200,202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/initiative",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												"initiative"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Initiative with NF - Check detail wallet amount - Get wallet detail - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test('Wallet - Happy case - Initiative with NF - Check detail wallet amount - Get wallet detail - Response status is 200', function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse.amount).eqls(parseInt(pm.collectionVariables.get('beneficiaryBudget')));\r",
													"});\r",
													"\r",
													"pm.test('Wallet - Happy case - Initiative with NF - Get wallet detail - Checking familyId is the same', function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse.familyId).eqls(pm.collectionVariables.get('familyId'));\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 20000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Initiative",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy Case - Initiative with NF - Delete Initiative - Status test 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative/idpay/initiative/{{initiativeId}}",
									"host": [
										"{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative"
									],
									"path": [
										"idpay",
										"initiative",
										"{{initiativeId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Enroll Instrument",
					"item": [
						{
							"name": "ENTE - Initiative creation",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll instrument - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.welfare.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n    \"orgRole\": \"{{orgRole_Ente}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlToken}}/welfare/token/test",
											"host": [
												"{{baseUrlToken}}"
											],
											"path": [
												"welfare",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "STEP1-Insert Initiative (Service Info)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//pm.collectionVariables.set('serviceId', pm.variables.replaceIn('{{$randomUUID}}'));\r",
													"let moment = require('moment');\r",
													"const now = String(moment().format('DD-MM-YYYY hh:mm'));\r",
													"const serviceName = 'Test funzionali App IO Wallet ' + now;\r",
													"pm.collectionVariables.set('serviceName', serviceName);\r",
													"\r",
													"pm.collectionVariables.set('description', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
													"\r",
													"pm.collectionVariables.set('channel_type', 'web');\r",
													"pm.collectionVariables.set('channel_contact', pm.variables.replaceIn('{{$randomUrl}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"// console.log('jsondata', jsonData);\r",
													"// console.log('jsondata.initiativeId', jsonData.initiativeId);\r",
													"pm.collectionVariables.set('initiativeId', jsonData.initiativeId);\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP1 - Status test 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP1 - Response body must contain initiativeId field\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse).have.property(\"initiativeId\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serviceIO\": true,\n    \"serviceName\": \"{{serviceName}}\",\n    \"serviceScope\": \"LOCAL\",\n    \"description\": \"{{description}}\",\n    \"privacyLink\": \"https://www.google.it\",\n    \"tcLink\": \"https://www.google.com\",\n    \"channels\": [\n        {\n            \"type\": \"{{channel_type}}\",\n            \"contact\": \"{{channel_contact}}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/info",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"info"
											]
										},
										"description": "Save initiative and first subset of data 'general info'"
									},
									"response": []
								},
								{
									"name": "STEP2-Update Initiative (general Info)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment');\r",
													"//Format: YYYY-MM-DD\r",
													"let today = String(moment().format('YYYY-MM-DD'));\r",
													"let todayP1 = String(moment().add(1,'months').format('YYYY-MM-DD'));\r",
													"let todayP2 = String(moment().add(2,'months').format('YYYY-MM-DD'));\r",
													"let todayP3 = String(moment().add(3,'months').format('YYYY-MM-DD'));\r",
													"\r",
													"/*\r",
													"var futureDate = pm.variables.replaceIn('{{$$randomDateFuture}}');\r",
													"pm.collectionVariables.set('...', _.random(0, 180));\r",
													"*/\r",
													"//_.floor(_.random(1.0, 100000.0, true),2)\r",
													"pm.collectionVariables.set('budget', _.floor(_.random(10000, 100000, true),2));\r",
													"pm.collectionVariables.set('beneficiaryType', 'PF');\r",
													"//pm.collectionVariables.set('beneficiaryKnown', pm.variables.replaceIn('{{$randomBoolean}}'));\r",
													"pm.collectionVariables.set('beneficiaryKnown', false);\r",
													"pm.collectionVariables.set('rankingEnabled', false);\r",
													"pm.collectionVariables.set('beneficiaryBudget', pm.variables.replaceIn('{{$randomInt}}'));//default max 1000\r",
													"pm.collectionVariables.set('rankingStartDate', today);\r",
													"pm.collectionVariables.set('rankingEndDate', todayP1);\r",
													"pm.collectionVariables.set('startDate', today);\r",
													"pm.collectionVariables.set('endDate', todayP3);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP2 - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"budget\": {{budget}},\n    \"beneficiaryType\": \"{{beneficiaryType}}\",\n    \"beneficiaryKnown\": {{beneficiaryKnown}},\n    \"rankingEnabled\": {{rankingEnabled}},\n    \"beneficiaryBudget\": {{beneficiaryBudget}},\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\",\n    \"descriptionMap\": {\n        \"it\": \"it\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/:initiativeId/general",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												":initiativeId",
												"general"
											],
											"variable": [
												{
													"key": "initiativeId",
													"value": "{{initiativeId}}",
													"description": "(Required) The initiative ID"
												}
											]
										},
										"description": "Save initiative and first subset of data 'general info'"
									},
									"response": []
								},
								{
									"name": "STEP3-Update Initiative (criteria)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP3 - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"automatedCriteria\": [\r\n        {\r\n            \"authority\": \"INPS\",\r\n            \"code\": \"ISEE\",\r\n            \"operator\": \"GT\",\r\n            \"value\": \"1\",\r\n            \"value2\": \"\",\r\n            \"iseeTypes\": [\r\n                \"ORDINARIO\",\r\n                \"MINORENNE\",\r\n                \"UNIVERSITARIO\",\r\n                \"SOCIOSANITARIO\",\r\n                \"DOTTORATO\",\r\n                \"RESIDENZIALE\",\r\n                \"CORRENTE\"\r\n            ]\r\n        }\r\n    ],\r\n    \"selfDeclarationCriteria\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/{{initiativeId}}/beneficiary",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"{{initiativeId}}",
												"beneficiary"
											]
										}
									},
									"response": []
								},
								{
									"name": "STEP4-Update Initiative Trx-Reward rules",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP4 - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const d = new Date();\r",
													"dateString = d.toISOString()\r",
													"let endTime = dateString.split('T');\r",
													"endTime = endTime[1].split('Z');\r",
													"\r",
													"pm.collectionVariables.set('rewardRuleType', 'rewardValue');\r",
													"const rewardValueTypes = [\"PERCENTAGE\", \"ABSOLUTE\"];\r",
													"rewardValueTypeRandomIndex = _.random(0, rewardValueTypes.length - 1);\r",
													"const selectedRewardValueType = rewardValueTypes[rewardValueTypeRandomIndex];\r",
													"pm.collectionVariables.set('rewardValueType', selectedRewardValueType);\r",
													"if (selectedRewardValueType == \"PERCENTAGE\") {\r",
													"    pm.collectionVariables.set('rewardRuleValue', 100);\r",
													"} else {\r",
													"    pm.collectionVariables.set('rewardRuleValue', 1);\r",
													"}\r",
													"\r",
													"pm.collectionVariables.set('trxDaysOfWeek', pm.variables.replaceIn('{{$randomWeekday}}').toString().toUpperCase());\r",
													"pm.collectionVariables.set('trxDayEndTime', endTime[0]);\r",
													"pm.collectionVariables.set('trxThresholdFrom', 10);\r",
													"pm.collectionVariables.set('trxThresholdTo', 50);\r",
													"pm.collectionVariables.set('trxCountFrom', 3);\r",
													"pm.collectionVariables.set('trxCountTo', 11);\r",
													"pm.collectionVariables.set('trxRewardLimitFrequency', 'DAILY');\r",
													"pm.collectionVariables.set('trxRewardLimitValue', 3);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"initiativeRewardType\": \"REFUND\",\n  \"rewardRule\": {\n    \"_type\": \"{{rewardRuleType}}\",\n    \"rewardValue\": {{rewardRuleValue}},\n    \"rewardValueType\": \"{{rewardValueType}}\"\n  },\n  \"trxRule\": {\n      \"threshold\": {\n      \"from\": {{trxThresholdFrom}},\n      \"fromIncluded\": true,\n      \"to\": {{trxThresholdTo}},\n      \"toIncluded\": true\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/:initiativeId/reward",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												":initiativeId",
												"reward"
											],
											"variable": [
												{
													"key": "initiativeId",
													"value": "{{initiativeId}}",
													"description": "(Required) The initiative ID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "STEP5-Update Initiative Refund Rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative creation - STEP5 - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\r\n     \"timeParameter\": {\r\n        \"timeType\": \"DAILY\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/:initiativeId/refund",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												":initiativeId",
												"refund"
											],
											"variable": [
												{
													"key": "initiativeId",
													"value": "{{initiativeId}}",
													"description": "(Required) The initiative ID"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PAGOPA - Initiative update status APPROVED",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll instrument - Initiative approving - Generate Portal Token (PagoPA Admin)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalTokenPagopa\", textResponse);\r",
													"});\r",
													"\r",
													"//response time is less than 1s\r",
													"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Pagopa}}\",\r\n  \"name\": \"{{name_Pagopa}}\",\r\n  \"familyName\": \"{{familyName_Pagopa}}\",\r\n  \"email\": \"{{email_Pagopa}}\",\r\n  \"orgId\": \"{{orgId_Pagopa}}\",\r\n  \"orgVAT\": \"{{orgVAT_Pagopa}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Pagopa}}\",\r\n  \"orgRole\": \"{{orgRole_Pagopa}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlToken}}/welfare/token/test",
											"host": [
												"{{baseUrlToken}}"
											],
											"path": [
												"welfare",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update initiative into APPROVED status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - Initiative approving - PagoPA Admin updates initiative status into APPROVED - (Responses with 204)\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function(){}, 20000); //milliseconds"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalTokenPagopa}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrlInitiative}}/{{initiativeId}}/approved",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"{{initiativeId}}",
												"approved"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ENTE - Initiative PUBLISHED",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Wallet - Happy case - Initiative pubblication - Generate Portal Token (Ente Admin)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													"\r",
													"//response time is less than 1s\r",
													"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Ente}}\",\r\n  \"name\": \"{{name_Ente}}\",\r\n  \"familyName\": \"{{familyName_Ente}}\",\r\n  \"email\": \"{{email_Ente}}\",\r\n  \"orgId\": \"{{orgId_Ente}}\",\r\n  \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n  \"orgRole\": \"{{orgRole_Ente}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlToken}}/welfare/token/test",
											"host": [
												"{{baseUrlToken}}"
											],
											"path": [
												"welfare",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Initiative PUBLISHED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Initiative pubblication - Ente Admin updates initiative status into PUBLISHED -(Responses with 204)\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 30000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrlInitiative}}/{{initiativeId}}/published",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"{{initiativeId}}",
												"published"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "GET Initiative Detail (CIT)2",
							"item": [
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('API GET Initiative Detail IO - Happy case - Onboarding - Generate Token IO', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_2}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_2}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Initiative Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"API GET Initiative Detail IO - Happy case - CIT view initiative detail and Response Status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/detail",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"detail"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Onboarding User with criteria",
							"item": [
								{
									"name": "Accept T&C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - APP IO - Onboarding - Accept T&C - Response status is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 17000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Prerequisites Check",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - APP IO - Onboarding - Prerequisites Check - Response status is 200,202\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200,202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/initiative",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												"initiative"
											]
										}
									},
									"response": []
								},
								{
									"name": "PDND + Autocertification",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll instrument - APP IO - Onboarding - PDND + Autocertification - Response status is 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\",\r\n    \"pdndAccept\": true,\r\n    \"selfDeclarationList\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/onboarding/consent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"onboarding",
												"consent"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Enroll Instrument",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case -Enroll instrument - Enroll instrument - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"setTimeout(() => {}, 90000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(() => {}, 10000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/instruments/{{idwallet}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}",
										"instruments",
										"{{idwallet}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Wallet Status Ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Enroll instrument - Get wallet status - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Wallet - Happy case - Enroll instrument - Get wallet status - Response status is one of REFUNDABLE and NOT_REFUNDABLE_ONLY_INSTRUMENT\", function () {\r",
											"    let responseJson = pm.response.json()\r",
											"    pm.expect(responseJson.status).to.be.oneOf(['REFUNDABLE','NOT_REFUNDABLE_ONLY_INSTRUMENT']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(() => {}, 35000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "{{Ocp-Apim-Trace}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Wallet Detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Enroll instrument - Get wallet detail - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "{{Ocp-Apim-Trace}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Hpan",
					"item": [
						{
							"name": "Get Hpan List OK - 200",
							"item": [
								{
									"name": "Get Hpan List",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Get Hpan - Get Hpan list - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"instruments"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Enroll Iban",
					"item": [
						{
							"name": "Enroll Iban",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Enroll iban - Enroll iban - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"iban\": \"{{IBAN_1}}\",\r\n    \"description\": \"conto cointestato\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/iban",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}",
										"iban"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Wallet Status Ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Enroll iban - Get wallet status - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Wallet - Happy case - Enroll iban - Get wallet status - Response is one of REFUNDABLE and REFUNDABLE_ONLY_INSTRUMENT\", function () {\r",
											"    let responseJson = pm.response.json()\r",
											"    pm.expect(responseJson.status).to.be.oneOf(['REFUNDABLE','REFUNDABLE_ONLY_INSTRUMENT']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "{{Ocp-Apim-Trace}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Wallet Detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Enroll iban - Get wallet detail - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"iban\", pm.response.json().iban);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "{{Ocp-Apim-Trace}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Wallet List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Enroll iban - Get wallet detail - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"iban\", pm.response.json().iban);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "{{Ocp-Apim-Trace}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Wallet Detail Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Enroll iban - Get wallet detail - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"iban\", pm.response.json().iban);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "{{Ocp-Apim-Trace}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Iban List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Enroll iban - Get iban list - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/iban",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"iban"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete instrument",
					"item": [
						{
							"name": "Get initiative List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Wallet - Happy case - Delete instrument - Get initiative list - Retrieve Initiative ID', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    const response = pm.response.json().instrumentList;\r",
											"    const filterByWalletId = response.filter(idWallet => idWallet.idWallet === pm.collectionVariables.get(\"idwallet\"));\r",
											"    pm.collectionVariables.set(\"instrumentId\", filterByWalletId[0].instrumentId);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/instruments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}",
										"instruments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Instrument - Ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Delete instrument - Delete instrument - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/instruments/{{instrumentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}",
										"instruments",
										"{{instrumentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Unsubscribe Wallet & User",
					"item": [
						{
							"name": "Unsubscribe - Ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Unsubscribed wallet & user - Unsubscribe - Response status is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(() => {}, 10000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/unsubscribe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}",
										"unsubscribe"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Wallet Status Ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Unsubscribe wallet & user - Get wallet status - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Wallet - Happy case - Unsubscribe wallet & user - Get wallet status - Wallet status is equals to UNSUBSCRIBED\", function () {\r",
											"    let responseJson = pm.response.json()\r",
											"    pm.expect(responseJson.status).to.be.equals('UNSUBSCRIBED');\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(() => {}, 2000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{apimSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "{{Ocp-Apim-Trace}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiativeId}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Status Onboarding - ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - Unsubscribe wallet & user - Get status onboarding - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"setTimeout(()=>{ \r",
											"\r",
											"pm.test(\"Wallet - Happy case - Unsubscribe wallet & user - Get status onboarding - Onboarding status is equals to UNSUBSCRIBED\", function () {\r",
											"    let jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse.status).to.eql('UNSUBSCRIBED');\r",
											"});\r",
											" },2000)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(() => {}, 3000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/idpay/onboarding/{{initiativeId}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"onboarding",
										"{{initiativeId}}",
										"status"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ISSUER Enroll Instrument",
					"item": [
						{
							"name": "ENTE - Initiative Creation",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Initiative with whitelist - Happy case - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.welfare.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n    \"orgRole\": \"{{orgRole_Ente}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlToken}}/welfare/token/test",
											"host": [
												"{{baseUrlToken}}"
											],
											"path": [
												"welfare",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "STEP1-Insert Initiative (Service Info)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(()=> {}, 15000)",
													"//pm.collectionVariables.set('serviceId', pm.variables.replaceIn('{{$randomUUID}}'));\r",
													"let moment = require('moment');\r",
													"const now = String(moment().format('DD-MM-YYYY hh:mm'));\r",
													"const serviceName = 'Test funzionali App IO Initiative with whitelist ' + now;\r",
													"pm.collectionVariables.set('serviceName', serviceName);\r",
													"\r",
													"pm.collectionVariables.set('description', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
													"\r",
													"pm.collectionVariables.set('channel_type', 'web');\r",
													"pm.collectionVariables.set('channel_contact', pm.variables.replaceIn('{{$randomUrl}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"// console.log('jsondata', jsonData);\r",
													"// console.log('jsondata.initiativeId', jsonData.initiativeId);\r",
													"pm.collectionVariables.set('initiativeEnrollWhitelist', jsonData.initiativeId);\r",
													"\r",
													"pm.test(\"Initiative with whitelist - Happy case - Initiative creation - STEP1 - Responses with 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Initiative with whitelist - Happy case - Initiative creation - STEP1 - Response body must contain initiativeId field\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse).have.property(\"initiativeId\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serviceIO\": true,\n    \"serviceName\": \"{{serviceName}}\",\n    \"serviceScope\": \"LOCAL\",\n    \"description\": \"{{description}}\",\n    \"privacyLink\": \"https://www.google.it\",\n    \"tcLink\": \"https://www.google.com\",\n    \"channels\": [\n        {\n            \"type\": \"{{channel_type}}\",\n            \"contact\": \"{{channel_contact}}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/info",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"info"
											]
										},
										"description": "Save initiative and first subset of data 'general info'"
									},
									"response": []
								},
								{
									"name": "STEP2-Update Initiative (general Info)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let moment = require('moment');\r",
													"//Format: YYYY-MM-DD\r",
													"let today = String(moment().format('YYYY-MM-DD'));\r",
													"let todayP1 = String(moment().add(1,'months').format('YYYY-MM-DD'));\r",
													"let todayP2 = String(moment().add(2,'months').format('YYYY-MM-DD'));\r",
													"let todayP3 = String(moment().add(3,'months').format('YYYY-MM-DD'));\r",
													"\r",
													"/*\r",
													"var futureDate = pm.variables.replaceIn('{{$$randomDateFuture}}');\r",
													"pm.collectionVariables.set('...', _.random(0, 180));\r",
													"*/\r",
													"//_.floor(_.random(1.0, 100000.0, true),2)\r",
													"//pm.collectionVariables.set('budget', _.floor(_.random(10000, 100000, true),2));\r",
													"pm.collectionVariables.set('budget', 20);\r",
													"pm.collectionVariables.set('beneficiaryType', 'PF');\r",
													"//pm.collectionVariables.set('beneficiaryKnown', pm.variables.replaceIn('{{$randomBoolean}}'));\r",
													"pm.collectionVariables.set('beneficiaryKnown', true);\r",
													"//pm.collectionVariables.set('beneficiaryBudget', pm.variables.replaceIn('{{$randomInt}}'));//default max 1000\r",
													"pm.collectionVariables.set('beneficiaryBudget', 10);//default max 1000\r",
													"pm.collectionVariables.set('rankingStartDate', today);\r",
													"pm.collectionVariables.set('rankingEndDate', todayP1);\r",
													"pm.collectionVariables.set('startDate', todayP2);\r",
													"pm.collectionVariables.set('endDate', todayP3);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Initiative with whitelist - Happy case - Initiative creation - STEP2 - Responses with 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"budget\": {{budget}},\n    \"beneficiaryType\": \"{{beneficiaryType}}\",\n    \"beneficiaryKnown\": {{beneficiaryKnown}},\n    \"beneficiaryBudget\": {{beneficiaryBudget}},\n    \"rankingStartDate\": \"{{rankingStartDate}}\",\n    \"rankingEndDate\": \"{{rankingEndDate}}\",\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\",\n    \"descriptionMap\": {\n        \"it\": \"it\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/:initiativeId/general",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												":initiativeId",
												"general"
											],
											"variable": [
												{
													"key": "initiativeId",
													"value": "{{initiativeEnrollWhitelist}}",
													"description": "(Required) The initiative ID"
												}
											]
										},
										"description": "Save initiative and first subset of data 'general info'"
									},
									"response": []
								},
								{
									"name": "STEP3 Update Groups - upload correct file",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Initiative with whitelist - Happy case - Initiative creation - STEP3 - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Initiative with whitelist - Happy case - Initiative creation - STEP3 - Verify response body\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse).have.property(\"status\");\r",
													"    pm.expect(jsonResponse.status).contain('DRAFT');\r",
													"    pm.expect(jsonResponse).have.property(\"elabTimeStamp\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "./postman/example_fiscal_code_issuer.csv"
												}
											]
										},
										"url": {
											"raw": "{{baseUrlGroup}}/:initiativeId/upload",
											"host": [
												"{{baseUrlGroup}}"
											],
											"path": [
												":initiativeId",
												"upload"
											],
											"variable": [
												{
													"key": "initiativeId",
													"value": "{{initiativeEnrollWhitelist}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "STEP4-Update Initiative Trx-Reward rules",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Initiative with whitelist - Happy case - Initiative creation - STEP4 - (Responses with 204)\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(()=> {}, 15000)\r",
													"const d = new Date();\r",
													"dateString = d.toISOString()\r",
													"let endTime = dateString.split('T');\r",
													"endTime = endTime[1].split('Z');\r",
													"\r",
													"pm.collectionVariables.set('rewardRuleType', 'rewardValue');\r",
													"const rewardValueTypes = [\"PERCENTAGE\", \"ABSOLUTE\"];\r",
													"rewardValueTypeRandomIndex = _.random(0, rewardValueTypes.length - 1);\r",
													"const selectedRewardValueType = rewardValueTypes[rewardValueTypeRandomIndex];\r",
													"pm.collectionVariables.set('rewardValueType', selectedRewardValueType);\r",
													"if (selectedRewardValueType == \"PERCENTAGE\") {\r",
													"    pm.collectionVariables.set('rewardRuleValue', 100);\r",
													"} else {\r",
													"    pm.collectionVariables.set('rewardRuleValue', 1);\r",
													"}\r",
													"\r",
													"pm.collectionVariables.set('trxDaysOfWeek', pm.variables.replaceIn('{{$randomWeekday}}').toString().toUpperCase());\r",
													"pm.collectionVariables.set('trxDayEndTime', endTime[0]);\r",
													"pm.collectionVariables.set('trxThresholdFrom', 10);\r",
													"pm.collectionVariables.set('trxThresholdTo', 50);\r",
													"pm.collectionVariables.set('trxCountFrom', 3);\r",
													"pm.collectionVariables.set('trxCountTo', 11);\r",
													"pm.collectionVariables.set('trxRewardLimitFrequency', 'DAILY');\r",
													"pm.collectionVariables.set('trxRewardLimitValue', 3);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"initiativeRewardType\": \"REFUND\",\n    \"rewardRule\": {\n        \"_type\": \"{{rewardRuleType}}\",\n        \"rewardValue\": {{rewardRuleValue}},\n        \"rewardValueType\": \"{{rewardValueType}}\"\n    },\n    \"trxRule\": {\n        \"daysOfWeek\": [\n            {\n                \"daysOfWeek\": [\n                    \"{{trxDaysOfWeek}}\"\n                ],\n                \"intervals\": [\n                    {\n                        \"startTime\": \"00:00:00.000\",\n                        \"endTime\": \"{{trxDayEndTime}}\"\n                    }\n                ]\n            }\n        ],\n        \"threshold\": {\n            \"from\": {{trxThresholdFrom}},\n            \"fromIncluded\": true,\n            \"to\": {{trxThresholdTo}},\n            \"toIncluded\": true\n        },\n        \"mccFilter\": {\n            \"allowedList\": true,\n            \"values\": [\n                \"0742\",\n                \"0743\",\n                \"0744\"\n            ]\n        },\n        \"trxCount\": {\n            \"from\": {{trxCountFrom}},\n            \"fromIncluded\": true,\n            \"to\": {{trxCountTo}},\n            \"toIncluded\": true\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/:initiativeId/reward",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												":initiativeId",
												"reward"
											],
											"variable": [
												{
													"key": "initiativeId",
													"value": "{{initiativeEnrollWhitelist}}",
													"description": "(Required) The initiative ID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "STEP5-Update Initiative Refund Rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Initiative with whitelist - Happy case - Initiative creation - STEP5 - (Responses with 204)\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/*const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
													"timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
													"\r",
													"const accumulatedType = [\"BUDGET_EXHAUSTED\",\"THRESHOLD_REACHED\"];\r",
													"accumulatedTypeRandomIndex = _.random(0, timeType.length-1);\r",
													"\r",
													"pm.collectionVariables.set('timeType', timeType[timeTypeRandomIndex]);\r",
													"pm.collectionVariables.set('accumulatedType', accumulatedType[accumulatedTypeRandomIndex]);\r",
													"pm.collectionVariables.set('identificationCode', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
													"*/\r",
													"\r",
													"\r",
													"let refundType = [\"timeParameter\", \"accumulatedAmount\"];\r",
													"refundTypeRandomIndex = _.random(0, refundType.length - 1);\r",
													"\r",
													"const refundTypeSelected = refundType[refundTypeRandomIndex];\r",
													"let body = {};\r",
													"if (refundTypeSelected == \"timeParameter\") {\r",
													"    const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
													"    timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
													"    body = {\r",
													"        timeParameter: {\r",
													"            timeType: timeType[timeTypeRandomIndex]\r",
													"        }\r",
													"    };\r",
													"} else {\r",
													"    const accumulatedType = [\"BUDGET_EXHAUSTED\", \"THRESHOLD_REACHED\"];\r",
													"    accumulatedTypeRandomIndex = _.random(0, accumulatedType.length - 1);\r",
													"    const accumulatedTypeSelected = accumulatedType[accumulatedTypeRandomIndex];\r",
													"    if (accumulatedTypeSelected == \"BUDGET_EXHAUSTED\") {\r",
													"        body = {\r",
													"            accumulatedAmount: {\r",
													"                accumulatedType: \"BUDGET_EXHAUSTED\"\r",
													"            }\r",
													"        };\r",
													"    } else {\r",
													"        body = {\r",
													"            accumulatedAmount: {\r",
													"                accumulatedType: \"THRESHOLD_REACHED\",\r",
													"                refundThreshold: 10\r",
													"            }\r",
													"        };\r",
													"    }\r",
													"}\r",
													"\r",
													"pm.collectionVariables.set('body', JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{body}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlInitiative}}/:initiativeId/refund",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												":initiativeId",
												"refund"
											],
											"variable": [
												{
													"key": "initiativeId",
													"value": "{{initiativeEnrollWhitelist}}",
													"description": "(Required) The initiative ID"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PAGOPA - Initiative update status APPROVED",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Initiative with whitelist - Happy case - Initiative updating - Generate Portal Token (PagoPA Admin)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalTokenPagopa\", textResponse);\r",
													"});\r",
													"\r",
													"//response time is less than 1s\r",
													"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Pagopa}}\",\r\n  \"name\": \"{{name_Pagopa}}\",\r\n  \"familyName\": \"{{familyName_Pagopa}}\",\r\n  \"email\": \"{{email_Pagopa}}\",\r\n  \"orgId\": \"{{orgId_Pagopa}}\",\r\n  \"orgVAT\": \"{{orgVAT_Pagopa}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Pagopa}}\",\r\n  \"orgRole\": \"{{orgRole_Pagopa}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlToken}}/welfare/token/test",
											"host": [
												"{{baseUrlToken}}"
											],
											"path": [
												"welfare",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update initiative into APPROVED status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Initiative with whitelist - Happy case - Initiative updating - PagoPA Admin updates initiative status into APPROVED -(Responses with 204)\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function(){}, 20000); //milliseconds"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalTokenPagopa}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrlInitiative}}/{{initiativeEnrollWhitelist}}/approved",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"{{initiativeEnrollWhitelist}}",
												"approved"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ENTE - Initiative PUBLISHED",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Initiative with whitelist - Happy case - Initiative updating - Generate Portal Token (Ente Admin)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													"\r",
													"//response time is less than 1s\r",
													"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Ente}}\",\r\n  \"name\": \"{{name_Ente}}\",\r\n  \"familyName\": \"{{familyName_Ente}}\",\r\n  \"email\": \"{{email_Ente}}\",\r\n  \"orgId\": \"{{orgId_Ente}}\",\r\n  \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n  \"orgRole\": \"{{orgRole_Ente}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlToken}}/welfare/token/test",
											"host": [
												"{{baseUrlToken}}"
											],
											"path": [
												"welfare",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Initiative PUBLISHED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Initiative with whitelist - Happy case - Initiative updating - Ente Admin updates initiative status into PUBLISHED -(Responses with 204)\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(()=> {}, 30000)",
													"/*let body;\r",
													"baseUrlInitiative = pm.variables.get('baseUrlInitiative')\r",
													"if(baseUrlInitiative.includes('localhost')){\r",
													"    body = {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            organizationName: 'Comune di Milano',\r",
													"            organizationFiscalCode: '11122233344',\r",
													"            organizationUserId: 'b8986bf2-1f93-4827-ab16-b21eb8aeae2b',\r",
													"            organizationUserRole: 'admin'\r",
													"        })\r",
													"    }\r",
													"    pm.request.headers.add({\r",
													"        key: \"Content-Type\",\r",
													"        value: \"application/json\"\r",
													"    });\r",
													"    pm.variables.set('body', JSON.stringify(body));\r",
													"    pm.request.body.update(body);\r",
													"}\r",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrlInitiative}}/{{initiativeEnrollWhitelist}}/published",
											"host": [
												"{{baseUrlInitiative}}"
											],
											"path": [
												"{{initiativeEnrollWhitelist}}",
												"published"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ISSUER Onboarding User with Whitelist",
							"item": [
								{
									"name": "Accept T&C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - ISSUER Enroll instrument - Onboarding user with whitelist - ISSUER - Accept T&C - Response status is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(()=> {}, 20000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{issuerSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "it_IT",
												"type": "text"
											},
											{
												"key": "Fiscal-Code",
												"value": "{{CF_ISSUER_1}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeEnrollWhitelist}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/hb/onboarding/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"hb",
												"onboarding",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Prerequisites Check",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - ISSUER Enroll instrument - Onboarding user with whitelist - ISSUER - Prerequisites Check - Response status is 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{issuerSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "it_IT",
												"type": "text"
											},
											{
												"key": "Fiscal-Code",
												"value": "{{CF_ISSUER_1}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\" : \"{{initiativeEnrollWhitelist}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/hb/onboarding/initiative",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"hb",
												"onboarding",
												"initiative"
											]
										}
									},
									"response": []
								},
								{
									"name": "Status Onboarding",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - ISSUER Enroll instrument - Onboarding user with whitelist - ISSUER - Status onboarding - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Happy case - ISSUER Enroll instrument - Onboarding user with whitelist - ISSUER - Status onboarding - Onboarding status is ONBOARDING_OK\", function () {\r",
													"    let jsonResponse = pm.response.json()\r",
													"    pm.expect(jsonResponse.status).equals('ONBOARDING_OK');\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(()=> {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Fiscal-Code",
												"value": "{{CF_ISSUER_1}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{issuerSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "it_IT",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/hb/onboarding/{{initiativeEnrollWhitelist}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"hb",
												"onboarding",
												"{{initiativeEnrollWhitelist}}",
												"status"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Enroll Instrument",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - ISSUER Enroll instrument - Enroll instrument - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(()=> {}, 10000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{issuerSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "it_IT",
										"type": "text"
									},
									{
										"key": "Fiscal-Code",
										"value": "{{CF_ISSUER_1}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"brand\": \"VISA\",\r\n    \"type\": \"DEB\",\r\n    \"pgpPan\": \"-----BEGIN PGP MESSAGE-----\\n\\nwYwDxJQrySYbEVIBA/9KY5u6uO6iBrNwQCwpw5ZmDlvZ0A/1GVfFPl+nRouUdyrY\\nO42c9mIko5ytY4jsphTKQWJl2dWm+3T/orDkImBaOnxuKCtJwEA5itXmbXqK8JnT\\nYy9o1Tk6FsWbCXusVm0KNOFeAgjv4/gib4sIjt+zjSnxSBYj6LT0KknEdcs7GNJF\\nAbGNMy+oiENHerrELX4vK4y63H0QBs4Ptn1zmRnG5Jp4K+Edrlb/TOtG6eldAXt/\\nS1DpAzBFhL0g0EtKNBHqE2iPle30\\n=0OL5\\n-----END PGP MESSAGE-----\\n\",\r\n    \"expireMonth\": \"08\",\r\n    \"expireYear\": \"2023\",\r\n    \"issuerAbiCode\": \"03069\",\r\n    \"holder\": \"TEST\",\r\n    \"instrumentType\": \"CARD\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/hb/wallet/{{initiativeEnrollWhitelist}}/instruments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"hb",
										"wallet",
										"{{initiativeEnrollWhitelist}}",
										"instruments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Wallet Detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - ISSUER Enroll instrument - Get wallet detail - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(()=> {}, 20000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{issuerSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "it_IT",
										"type": "text"
									},
									{
										"key": "Fiscal-Code",
										"value": "{{CF_ISSUER_1}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/hb/wallet/{{initiativeEnrollWhitelist}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"hb",
										"wallet",
										"{{initiativeEnrollWhitelist}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Wallet Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - ISSUER Enroll instrument - Get wallet status - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Wallet - Happy case - ISSUER Enroll instrument - Get wallet status - Wallet status is NOT_REFUNDABLE_ONLY_INSTRUMENT\", function () {\r",
											"    let responseJson = pm.response.json()\r",
											"    pm.expect(responseJson.status).to.be.eql('NOT_REFUNDABLE_ONLY_INSTRUMENT');\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(()=> {}, 15000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{issuerSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "it_IT",
										"type": "text"
									},
									{
										"key": "Fiscal-Code",
										"value": "{{CF_ISSUER_1}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/hb/wallet/{{initiativeEnrollWhitelist}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"hb",
										"wallet",
										"{{initiativeEnrollWhitelist}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get List PI associated to initiative",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Happy case - ISSUER Enroll instrument - Get the list of payment instrument associated to initiative - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{issuerSubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "it_IT",
										"type": "text"
									},
									{
										"key": "Fiscal-Code",
										"value": "{{CF_ISSUER_1}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/idpay/hb/wallet/{{initiativeEnrollWhitelist}}/instruments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"hb",
										"wallet",
										"{{initiativeEnrollWhitelist}}",
										"instruments"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Enrollment IdPay Code",
					"item": [
						{
							"name": "Initiative creation",
							"item": [
								{
									"name": "ENTE - Initiative creation",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Happy case - Initiative discount - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"aud\": \"idpay.welfare.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n    \"orgRole\": \"{{orgRole_Ente}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP1-Insert Initiative (Service Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"let moment = require('moment');\r",
															"const now = String(moment().format('DD-MM-YYYY hh:mm'));\r",
															"const serviceName = 'Test funzionali App IO Initiative with criteria and discount ' + now;\r",
															"pm.collectionVariables.set('serviceName', serviceName);\r",
															"pm.collectionVariables.set('description', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"\r",
															"pm.collectionVariables.set('channel_type', 'web');\r",
															"pm.collectionVariables.set('channel_contact', pm.variables.replaceIn('{{$randomUrl}}'));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);\r",
															"// console.log('jsondata', jsonData);\r",
															"// console.log('jsondata.initiativeId', jsonData.initiativeId);\r",
															"pm.collectionVariables.set('initiativeId_idpaycode', jsonData.initiativeId);\r",
															"\r",
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP1 - Responses with 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP1 - Verify response body\", function () {\r",
															"    let jsonResponse = pm.response.json();\r",
															"    pm.expect(jsonResponse).have.property(\"initiativeId\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceIO\": true,\n    \"serviceName\": \"{{serviceName}}\",\n    \"serviceScope\": \"LOCAL\",\n    \"description\": \"{{description}}\",\n    \"privacyLink\": \"https://www.google.it\",\n    \"tcLink\": \"https://www.google.com\",\n    \"channels\": [\n        {\n            \"type\": \"{{channel_type}}\",\n            \"contact\": \"{{channel_contact}}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/info",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"info"
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										},
										{
											"name": "STEP2-Update Initiative (general Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"let moment = require('moment');\r",
															"//Format: YYYY-MM-DD\r",
															"let today = String(moment().format('YYYY-MM-DD'));\r",
															"let todayP1 = String(moment().add(1,'months').format('YYYY-MM-DD'));\r",
															"let todayP2 = String(moment().add(2,'months').format('YYYY-MM-DD'));\r",
															"let todayP3 = String(moment().add(3,'months').format('YYYY-MM-DD'));\r",
															"\r",
															"let yesterday = String(moment().subtract(1, 'days').format('YYYY-MM-DD'));\r",
															"\r",
															"\r",
															"/*\r",
															"var futureDate = pm.variables.replaceIn('{{$$randomDateFuture}}');\r",
															"pm.collectionVariables.set('...', _.random(0, 180));\r",
															"*/\r",
															"//_.floor(_.random(1.0, 100000.0, true),2)\r",
															"pm.collectionVariables.set('budget', 500);\r",
															"pm.collectionVariables.set('beneficiaryType', 'PF');\r",
															"//pm.collectionVariables.set('beneficiaryKnown', pm.variables.replaceIn('{{$randomBoolean}}'));\r",
															"pm.collectionVariables.set('beneficiaryKnown', false);\r",
															"pm.collectionVariables.set('rankingEnabled', false);\r",
															"pm.collectionVariables.set('beneficiaryBudget', 100);//default max 1000\r",
															"pm.collectionVariables.set('rankingStartDate', today);\r",
															"pm.collectionVariables.set('rankingEndDate', todayP1);\r",
															"pm.collectionVariables.set('startDate', today);\r",
															"pm.collectionVariables.set('endDate', todayP3);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP2 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"budget\": {{budget}},\n    \"beneficiaryType\": \"{{beneficiaryType}}\",\n    \"beneficiaryKnown\": {{beneficiaryKnown}},\n    \"rankingEnabled\": {{rankingEnabled}},\n    \"beneficiaryBudget\": {{beneficiaryBudget}},\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\",\n    \"descriptionMap\": {\n        \"it\": \"it\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId_exhausted/general",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId_exhausted",
														"general"
													],
													"variable": [
														{
															"key": "initiativeId_exhausted",
															"value": "{{initiativeId_idpaycode}}"
														}
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										},
										{
											"name": "STEP3-Update Initiative (criteria)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP3 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"automatedCriteria\": [\r\n        {\r\n            \"authority\": \"INPS\",\r\n            \"code\": \"ISEE\",\r\n            \"operator\": \"GT\",\r\n            \"value\": \"1\",\r\n            \"value2\": \"\",\r\n            \"iseeTypes\": [\r\n                \"ORDINARIO\",\r\n                \"MINORENNE\",\r\n                \"UNIVERSITARIO\",\r\n                \"SOCIOSANITARIO\",\r\n                \"DOTTORATO\",\r\n                \"RESIDENZIALE\",\r\n                \"CORRENTE\"\r\n            ]\r\n        }\r\n    ],\r\n    \"selfDeclarationCriteria\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId_idpaycode}}/beneficiary",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId_idpaycode}}",
														"beneficiary"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP4-Update Initiative Trx-Reward rules",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP4 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(()=> {}, 15000)\r",
															"const d = new Date();\r",
															"dateString = d.toISOString()\r",
															"let endTime = dateString.split('T');\r",
															"endTime = endTime[1].split('Z');\r",
															"\r",
															"pm.collectionVariables.set('rewardRuleType', 'rewardValue');\r",
															"const rewardValueTypes = [\"PERCENTAGE\", \"ABSOLUTE\"];\r",
															"rewardValueTypeRandomIndex = _.random(0, rewardValueTypes.length - 1);\r",
															"const selectedRewardValueType = rewardValueTypes[rewardValueTypeRandomIndex];\r",
															"pm.collectionVariables.set('rewardValueType', selectedRewardValueType);\r",
															"if (selectedRewardValueType == \"PERCENTAGE\") {\r",
															"    pm.collectionVariables.set('rewardRuleValue', 100);\r",
															"} else {\r",
															"    pm.collectionVariables.set('rewardRuleValue', 50);\r",
															"}\r",
															"\r",
															"pm.collectionVariables.set('trxDaysOfWeek', pm.variables.replaceIn('{{$randomWeekday}}').toString().toUpperCase());\r",
															"pm.collectionVariables.set('trxDayEndTime', endTime[0]);\r",
															"pm.collectionVariables.set('trxThresholdFrom', 50);\r",
															"pm.collectionVariables.set('trxThresholdTo', 80);\r",
															"pm.collectionVariables.set('trxCountFrom', 3);\r",
															"pm.collectionVariables.set('trxCountTo', 11);\r",
															"pm.collectionVariables.set('trxRewardLimitFrequency', 'DAILY');\r",
															"pm.collectionVariables.set('trxRewardLimitValue', 3);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"initiativeRewardType\": \"DISCOUNT\",\n  \"rewardRule\": {\n    \"_type\": \"{{rewardRuleType}}\",\n    \"rewardValue\": {{rewardRuleValue}},\n    \"rewardValueType\": \"{{rewardValueType}}\"\n  },\n  \"trxRule\": {\n      \"threshold\": {\n      \"from\": {{trxThresholdFrom}},\n      \"fromIncluded\": true,\n      \"to\": {{trxThresholdTo}},\n      \"toIncluded\": true\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId_exhausted/reward",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId_exhausted",
														"reward"
													],
													"variable": [
														{
															"key": "initiativeId_exhausted",
															"value": "{{initiativeId_idpaycode}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP5-Update Initiative Refund Rule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative creation - STEP5 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"/*const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
															"timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"\r",
															"const accumulatedType = [\"BUDGET_EXHAUSTED\",\"THRESHOLD_REACHED\"];\r",
															"accumulatedTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"\r",
															"pm.collectionVariables.set('timeType', timeType[timeTypeRandomIndex]);\r",
															"pm.collectionVariables.set('accumulatedType', accumulatedType[accumulatedTypeRandomIndex]);\r",
															"pm.collectionVariables.set('identificationCode', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"*/\r",
															"\r",
															"/*\r",
															"let refundType = \"timeParameter\";\r",
															"refundTypeRandomIndex = _.random(0, refundType.length - 1);\r",
															"\r",
															"const refundTypeSelected = \"timeParameter\";\r",
															"let body = {};\r",
															"if (refundTypeSelected == \"timeParameter\") {\r",
															"    const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
															"    timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"    body = {\r",
															"        timeParameter: {\r",
															"            timeType: timeType[timeTypeRandomIndex]\r",
															"        }\r",
															"    };\r",
															"} else {\r",
															"    const accumulatedType = [\"BUDGET_EXHAUSTED\", \"THRESHOLD_REACHED\"];\r",
															"    accumulatedTypeRandomIndex = _.random(0, accumulatedType.length - 1);\r",
															"    const accumulatedTypeSelected = accumulatedType[accumulatedTypeRandomIndex];\r",
															"    if (accumulatedTypeSelected == \"BUDGET_EXHAUSTED\") {\r",
															"        body = {\r",
															"            accumulatedAmount: {\r",
															"                accumulatedType: \"BUDGET_EXHAUSTED\"\r",
															"            }\r",
															"        };\r",
															"    } else {\r",
															"        body = {\r",
															"            accumulatedAmount: {\r",
															"                accumulatedType: \"THRESHOLD_REACHED\",\r",
															"                refundThreshold: 10\r",
															"            }\r",
															"        };\r",
															"    }\r",
															"}\r",
															"*/\r",
															"/*const timeType = [\"CLOSED\", \"DAILY\", \"WEEKLY\", \"MONTHLY\", \"QUARTERLY\"];\r",
															"timeTypeRandomIndex = _.random(0, timeType.length - 1);\r",
															"const body = {\r",
															"    timeParameter: {\r",
															"        timeType: timeType[timeTypeRandomIndex]\r",
															"    }\r",
															"};\r",
															"pm.collectionVariables.set('body', JSON.stringify(body));\r",
															"*/"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\r\n     \"timeParameter\": {\r\n        \"timeType\": \"DAILY\"\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId_exhausted/refund",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId_exhausted",
														"refund"
													],
													"variable": [
														{
															"key": "initiativeId_exhausted",
															"value": "{{initiativeId_idpaycode}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "PAGOPA - Initiative update status APPROVED",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Happy case - Initiative discount - Initiative updating - Generate Portal Token (PagoPA Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalTokenPagopa\", textResponse);\r",
															"});\r",
															"\r",
															"//response time is less than 1s\r",
															"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Pagopa}}\",\r\n  \"name\": \"{{name_Pagopa}}\",\r\n  \"familyName\": \"{{familyName_Pagopa}}\",\r\n  \"email\": \"{{email_Pagopa}}\",\r\n  \"orgId\": \"{{orgId_Pagopa}}\",\r\n  \"orgVAT\": \"{{orgVAT_Pagopa}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Pagopa}}\",\r\n  \"orgRole\": \"{{orgRole_Pagopa}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update initiative into APPROVED status",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative updating - PagoPA Admin updates initiative status into APPROVED -(Responses with 204)\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//setTimeout(function(){}, 20000); //milliseconds"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalTokenPagopa}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId_idpaycode}}/approved",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId_idpaycode}}",
														"approved"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ENTE - Initiative PUBLISHED",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Happy case - Initiative discount - Initiative pubblication - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															"\r",
															"//response time is less than 1s\r",
															"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"aud\": \"idpay.welfare.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n    \"orgRole\": \"{{orgRole_Ente}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Initiative PUBLISHED",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Initiative pubblication - Ente Admin updates initiative status into PUBLISHED -(Responses with 204)\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"/*let body;\r",
															"baseUrlInitiative = pm.variables.get('baseUrlInitiative')\r",
															"if(baseUrlInitiative.includes('localhost')){\r",
															"    body = {\r",
															"        mode: 'raw',\r",
															"        raw: JSON.stringify({\r",
															"            organizationName: 'Comune di Milano',\r",
															"            organizationFiscalCode: '11122233344',\r",
															"            organizationUserId: 'b8986bf2-1f93-4827-ab16-b21eb8aeae2b',\r",
															"            organizationUserRole: 'admin'\r",
															"        })\r",
															"    }\r",
															"    pm.request.headers.add({\r",
															"        key: \"Content-Type\",\r",
															"        value: \"application/json\"\r",
															"    });\r",
															"    pm.variables.set('body', JSON.stringify(body));\r",
															"    pm.request.body.update(body);\r",
															"}\r",
															"*/"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId_idpaycode}}/published",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId_idpaycode}}",
														"published"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Generate IDPAYCODE without initiative + association",
							"item": [
								{
									"name": "Onboarding 1",
									"item": [
										{
											"name": "Generate Token IO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Wallet - Happy case - Initiative discount - Onboarding - Generate Token IO', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{genericSubscriptionKey}}",
														"type": "default"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rtd",
														"mock-io",
														"login"
													],
													"query": [
														{
															"key": "fiscalCode",
															"value": "{{CF_fake}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Accept T&C",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - Accept T&C - return status 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 15000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{apimSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_idpaycode}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Prerequisites Check",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - Prerequisites Check - return status 200 or 202\", function () {\r",
															"    pm.expect(pm.response.code).to.be.oneOf([200,202]);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{apimSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_idpaycode}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/initiative",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														"initiative"
													]
												}
											},
											"response": []
										},
										{
											"name": "PDND + Autocertification",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - PDND + Autocertification - return status 202\", function () {\r",
															"    pm.response.to.have.status(202);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_idpaycode}}\",\r\n    \"pdndAccept\": true,\r\n    \"selfDeclarationList\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/consent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														"consent"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Generate IDPAYCODE without initiativeId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set('idpayCode', jsonData.idpayCode);\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Generate IDPAYCODE - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Generate IDPAYCODE  - Verify response body\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse).have.property(\"idpayCode\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/code/generate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"code",
												"generate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Instrument List",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Response with 200', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Response with 200', () => {\r",
													"    const response = pm.response.json().instrumentList;\r",
													"    const filterByInstrumentType = response.filter(instrumentType => instrumentType.instrumentType == \"IDPAYCODE\");\r",
													"    pm.expect(filterByInstrumentType).empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"instruments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get IDPAYCODE status TRUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Check status IDPAYCODE - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Check status IDPAYCODE  - Verify IDPAYCODE is enabled\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse.isIdPayCodeEnabled).eq(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/code/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"code",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Associate IDPAYCODE to initiative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Associate IDPAYCODE to initiative - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/code/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"code",
												"instruments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Instrument List",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Response with 200', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Response with 200', () => {\r",
													"    const response = pm.response.json().instrumentList;\r",
													"    const filterByInstrumentType = response.filter(instrumentType => instrumentType.instrumentType == \"IDPAYCODE\");\r",
													"    pm.expect(filterByInstrumentType[0].status).eq(\"ACTIVE\");\r",
													"    pm.collectionVariables.set(\"instrumentId\", filterByInstrumentType[0].instrumentId);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"instruments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Rigenerate IDPAYCODE",
							"item": [
								{
									"name": "Generate IDPAYCODE with initiativeId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Generate IDPAYCODE - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Generate IDPAYCODE  - Verify response body\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse).have.property(\"idpayCode\");\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Generate IDPAYCODE  - Verify idpayCode is different\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse.idpayCode).not.eq((pm.collectionVariables.get('idpayCode')));\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\":\"{{initiativeId_idpaycode}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/code/generate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"code",
												"generate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get instrument List",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Response with 200', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Response with 200', () => {\r",
													"    const response = pm.response.json().instrumentList;\r",
													"    const filterByInstrumentType = response.filter(instrumentType => instrumentType.instrumentType == \"IDPAYCODE\");\r",
													"    pm.expect(filterByInstrumentType[0].status).eq(\"ACTIVE\");\r",
													"    pm.collectionVariables.set(\"instrumentId\", filterByInstrumentType[0].instrumentId);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"instruments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Deactivate IDPAYCODE",
							"item": [
								{
									"name": "Deactivate IDPAYCODE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Deactivate IDPAYCODE - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/instruments/{{instrumentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"instruments",
												"{{instrumentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Instrument List",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Response is 200', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Check instrumentId is not present', () => {\r",
													"    const response = pm.response.json().instrumentList;\r",
													"    const filterByInstrumentId = response.filter(instrumentId => instrumentId.instrumentId === pm.collectionVariables.get(\"instrumentId\"));\r",
													"    pm.expect(filterByInstrumentId).empty;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"instruments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Generate IDPAYCODE with initiative",
							"item": [
								{
									"name": "Onboarding 2",
									"item": [
										{
											"name": "Generate Token IO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Wallet - Happy case - Initiative discount - Onboarding - Generate Token IO', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{genericSubscriptionKey}}",
														"type": "default"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake_2}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rtd",
														"mock-io",
														"login"
													],
													"query": [
														{
															"key": "fiscalCode",
															"value": "{{CF_fake_2}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Accept T&C",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - Accept T&C - return status 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 15000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{apimSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_idpaycode}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Prerequisites Check",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - Prerequisites Check - return status 200 or 202\", function () {\r",
															"    pm.expect(pm.response.code).to.be.oneOf([200,202]);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{apimSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_idpaycode}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/initiative",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														"initiative"
													]
												}
											},
											"response": []
										},
										{
											"name": "PDND + Autocertification",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - PDND + Autocertification - return status 202\", function () {\r",
															"    pm.response.to.have.status(202);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_idpaycode}}\",\r\n    \"pdndAccept\": true,\r\n    \"selfDeclarationList\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/consent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														"consent"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Generate IDPAYCODE with initiativeId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set('idpayCode', jsonData.idpayCode);\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Generate IDPAYCODE - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Generate IDPAYCODE  - Verify response body\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse).have.property(\"idpayCode\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\":\"{{initiativeId_idpaycode}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/code/generate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"code",
												"generate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get IDPAYCODE status TRUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Check status IDPAYCODE - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Happy case - Enroll IDPAYCODE - Check status IDPAYCODE  - Verify IDPAYCODE is enabled\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse.isIdPayCodeEnabled).eq(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/code/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"code",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get instrument List",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Response with 200', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Response with 200', () => {\r",
													"    const response = pm.response.json().instrumentList;\r",
													"    const filterByInstrumentType = response.filter(instrumentType => instrumentType.instrumentType == \"IDPAYCODE\");\r",
													"    pm.expect(filterByInstrumentType[0].status).eq(\"ACTIVE\");\r",
													"    pm.collectionVariables.set(\"instrumentId\", filterByInstrumentType[0].instrumentId);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"instruments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Unsubscribe & Check status",
							"item": [
								{
									"name": "Unsubscribe initiative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE -  Unsubscribe initiative - Response is 204', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/unsubscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"unsubscribe"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Instrument List",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Response is 200', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Check instrumentId is not present', () => {\r",
													"    const response = pm.response.json().instrumentList;\r",
													"    const filterByInstrumentId = response.filter(instrumentId => instrumentId.instrumentId === pm.collectionVariables.get(\"instrumentId\"));\r",
													"    pm.expect(filterByInstrumentId).empty;\r",
													"});\r",
													"\r",
													"pm.test('Wallet - Happy case - Enroll IDPAYCODE - Get initiative list - Check status QRCODE', () => {\r",
													"    const response = pm.response.json().instrumentList;\r",
													"    const filterByInstrumentType = response.filter(instrumentType => instrumentType.instrumentType == \"QRCODE\");\r",
													"    pm.expect(filterByInstrumentType).empty;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, 15000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"instruments"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Unhappy Case",
			"item": [
				{
					"name": "Get Hpan List - initiativeId not found - 200",
					"item": [
						{
							"name": "Get Hpan List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Unhappy case - Get Hpan list - Initiative Id not found - Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Wallet - Unhappy case - Get Hpan list - Initiative Id not found - Response is an empty list of payment instrumnet associated to this Hpan\", function () {\r",
											"    let jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse.instrumentList.length).equals(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet/{{initiative_fake}}/instruments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"{{initiative_fake}}",
										"instruments"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Unsubscribed enroll",
					"item": [
						{
							"name": "Enroll Unsubscribed User - 400",
							"item": [
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Unhappy case - Unsubscribed user try to enroll payment instrument - Generate token IO', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_2}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_2}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enroll Instrument",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll payment instrument - Enroll instrument - Response status is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll payment instrument - Enroll instrument - Response message is : You are unsubscribed at this initiative!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('You are unsubscribed at this initiative!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"hpan\": \"e556e291aa16641ac4475bae437429475f61298244f6d2bd1c259a08958b82eb\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/instruments/{{idwallet}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"instruments",
												"{{idwallet}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status Ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll payment instrument - Get wallet status - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll payment instrument - Get wallet status - Wallet status is equals to UNSUBSCRIBED\", function () {\r",
													"    let responseJson = pm.response.json()\r",
													"    pm.expect(responseJson.status).to.be.equals('UNSUBSCRIBED');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll payment instrument - Get wallet detail - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Enroll Iban Unsubscribed User - 400",
							"item": [
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Unhappy case - Unsubscribed user try to enroll iban - Generate token IO', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_2}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_2}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enroll Iban",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll iban - Enroll iban - Response status is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll iban - Enroll iban - Response message is: You are unsubscribed at this initiative!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('You are unsubscribed at this initiative!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"iban\": \"{{IBAN_1}}\",\r\n    \"description\": \"conto cointestato\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/iban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"iban"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status Ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll iban - Get wallet status - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll iban - Get wallet status - Wallet status is equals to UNSUBSCRIBED\", function () {\r",
													"    let responseJson = pm.response.json()\r",
													"    pm.expect(responseJson.status).to.be.equals('UNSUBSCRIBED');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll iban - Get wallet detail - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Unsubscribed user try to enroll iban - Get wallet detail - Wallet status is equals to UNSUBSCRIBED\", function () {\r",
													"    let responseJson = pm.response.json()\r",
													"    pm.expect(responseJson.status).to.be.equals('UNSUBSCRIBED');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Payment Instrument",
					"item": [
						{
							"name": "Enroll PI already in use - 404",
							"item": [
								{
									"name": "Onboarding User with criteria",
									"item": [
										{
											"name": "Generate Token IO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Wallet - Unhappy case - Payment Instrument - Enroll PI already in use - Onboarding - Generate token IO', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{genericSubscriptionKey}}",
														"type": "default"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_1}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rtd",
														"mock-io",
														"login"
													],
													"query": [
														{
															"key": "fiscalCode",
															"value": "{{CF_1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Accept T&C",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Enroll PI already in use - Onboarding -  Accept T&C - Status 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{apimSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Prerequisites Check",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Enroll PI already in use - Onboarding - Prerequisites check - Status 200 or 202\", function () {\r",
															"    pm.expect(pm.response.code).to.be.oneOf([200,202]);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{apimSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/initiative",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														"initiative"
													]
												}
											},
											"response": []
										},
										{
											"name": "PDND + Autocertification",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Enroll PI already in use - Onboarding - PDND + Autocertification - Status 202\", function () {\r",
															"    pm.response.to.have.status(202);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 8000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\",\r\n    \"pdndAccept\": true,\r\n    \"selfDeclarationList\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/consent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														"consent"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Enroll Instrument",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Enroll PI already in use - enrolling instrument - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Enroll PI already in use - Message is The selected payment instrument is not active for such user and initiative.\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The selected payment instrument is not active for such user and initiative.');\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 15000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/instruments/{{idwallet}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"instruments",
												"{{idwallet}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status Ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Enroll PI already in use - Get Status - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Enroll PI already in use - Get Status - Wallet status NOT_REFUNDABLE\", function () {\r",
													"    let responseJson = pm.response.json()\r",
													"    pm.expect(responseJson.status).to.be.eql('NOT_REFUNDABLE');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Enroll PI already in use - Get Detail - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Enroll Instrument id wallet not found - 404",
							"item": [
								{
									"name": "Enroll Instrument",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - idWallet not found - enrolling iban - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - idWallet not found - Message is The selected payment instrument is not active for such user and initiative.\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The selected payment instrument is not active for such user and initiative.');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/instruments/000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"instruments",
												"000000"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - idWallet not found - Get Status - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - idWallet not found - Get Status - Wallet status NOT_REFUNDABLE\", function () {\r",
													"    let responseJson = pm.response.json()\r",
													"    pm.expect(responseJson.status).to.be.oneOf(['NOT_REFUNDABLE_ONLY_IBAN','NOT_REFUNDABLE']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - idWallet not found - Get Detail - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Initiative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - idWallet not found - Delete Initiative - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative/idpay/initiative/{{initiativeId}}",
											"host": [
												"{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative"
											],
											"path": [
												"idpay",
												"initiative",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Enroll initiative not active for this User - 404",
							"item": [
								{
									"name": "ENTE - Initiative creation",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Ente}}\",\r\n  \"name\": \"{{name_Ente}}\",\r\n  \"familyName\": \"{{familyName_Ente}}\",\r\n  \"email\": \"{{email_Ente}}\",\r\n  \"orgId\": \"{{orgId_Ente}}\",\r\n  \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"ADMIN\",\r\n  \"orgRole\": \"{{orgRole_Ente}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP1-Insert Initiative (Service Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//pm.collectionVariables.set('serviceId', pm.variables.replaceIn('{{$randomUUID}}'));\r",
															"let moment = require('moment');\r",
															"const now = String(moment().format('DD-MM-YYYY hh:mm'));\r",
															"const serviceName = 'Test funzionali App IO Wallet ' + now;\r",
															"pm.collectionVariables.set('serviceName', serviceName);\r",
															"\r",
															"pm.collectionVariables.set('description', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"\r",
															"pm.collectionVariables.set('channel_type', 'web');\r",
															"pm.collectionVariables.set('channel_contact', pm.variables.replaceIn('{{$randomUrl}}'));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);\r",
															"// console.log('jsondata', jsonData);\r",
															"// console.log('jsondata.initiativeId', jsonData.initiativeId);\r",
															"pm.collectionVariables.set('initiativeId', jsonData.initiativeId);\r",
															"\r",
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative creation - STEP1 - Responses with 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative creation - STEP1 - Response body must contain initiativeId field\", function () {\r",
															"    let jsonResponse = pm.response.json();\r",
															"    pm.expect(jsonResponse).have.property(\"initiativeId\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceIO\": true,\n    \"serviceName\": \"{{serviceName}}\",\n    \"serviceScope\": \"LOCAL\",\n    \"description\": \"{{description}}\",\n    \"privacyLink\": \"https://www.google.it\",\n    \"tcLink\": \"https://www.google.com\",\n    \"channels\": [\n        {\n            \"type\": \"{{channel_type}}\",\n            \"contact\": \"{{channel_contact}}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/info",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"info"
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										},
										{
											"name": "STEP2-Update Initiative (general Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"let moment = require('moment');\r",
															"//Format: YYYY-MM-DD\r",
															"let today = String(moment().format('YYYY-MM-DD'));\r",
															"let todayP1 = String(moment().add(1,'months').format('YYYY-MM-DD'));\r",
															"let todayP2 = String(moment().add(2,'months').format('YYYY-MM-DD'));\r",
															"let todayP3 = String(moment().add(3,'months').format('YYYY-MM-DD'));\r",
															"\r",
															"/*\r",
															"var futureDate = pm.variables.replaceIn('{{$$randomDateFuture}}');\r",
															"pm.collectionVariables.set('...', _.random(0, 180));\r",
															"*/\r",
															"//_.floor(_.random(1.0, 100000.0, true),2)\r",
															"pm.collectionVariables.set('budget', _.floor(_.random(10000, 100000, true),2));\r",
															"pm.collectionVariables.set('beneficiaryType', 'PF');\r",
															"//pm.collectionVariables.set('beneficiaryKnown', pm.variables.replaceIn('{{$randomBoolean}}'));\r",
															"pm.collectionVariables.set('beneficiaryKnown', false);\r",
															"pm.collectionVariables.set('rankingEnabled', false);\r",
															"pm.collectionVariables.set('beneficiaryBudget', pm.variables.replaceIn('{{$randomInt}}'));//default max 1000\r",
															"pm.collectionVariables.set('rankingStartDate', today);\r",
															"pm.collectionVariables.set('rankingEndDate', todayP1);\r",
															"pm.collectionVariables.set('startDate', todayP2);\r",
															"pm.collectionVariables.set('endDate', todayP3);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative creation - STEP2 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"budget\": {{budget}},\n    \"beneficiaryType\": \"{{beneficiaryType}}\",\n    \"beneficiaryKnown\": {{beneficiaryKnown}},\n    \"rankingEnabled\": {{rankingEnabled}},\n    \"beneficiaryBudget\": {{beneficiaryBudget}},\n    \"rankingStartDate\": \"{{rankingStartDate}}\",\n    \"rankingEndDate\": \"{{rankingEndDate}}\",\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\",\n    \"descriptionMap\": {\n        \"it\": \"it\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId/general",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId",
														"general"
													],
													"variable": [
														{
															"key": "initiativeId",
															"value": "{{initiativeId}}",
															"description": "(Required) The initiative ID"
														}
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										},
										{
											"name": "STEP3-Update Initiative (criteria)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative creation - STEP3 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"automatedCriteria\": [\r\n        {\r\n            \"authority\": \"INPS\",\r\n            \"code\": \"ISEE\",\r\n            \"operator\": \"GT\",\r\n            \"value\": \"1\",\r\n            \"value2\": \"\",\r\n            \"iseeTypes\": [\r\n                \"ORDINARIO\",\r\n                \"MINORENNE\",\r\n                \"UNIVERSITARIO\",\r\n                \"SOCIOSANITARIO\",\r\n                \"DOTTORATO\",\r\n                \"RESIDENZIALE\",\r\n                \"CORRENTE\"\r\n            ]\r\n        }\r\n    ],\r\n    \"selfDeclarationCriteria\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId}}/beneficiary",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId}}",
														"beneficiary"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP4-Update Initiative Trx-Reward rules",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative creation - STEP4 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const d = new Date();\r",
															"dateString = d.toISOString()\r",
															"let endTime = dateString.split('T');\r",
															"endTime = endTime[1].split('Z');\r",
															"\r",
															"pm.collectionVariables.set('rewardRuleType', 'rewardValue');\r",
															"const rewardValueTypes = [\"PERCENTAGE\", \"ABSOLUTE\"];\r",
															"rewardValueTypeRandomIndex = _.random(0, rewardValueTypes.length - 1);\r",
															"const selectedRewardValueType = rewardValueTypes[rewardValueTypeRandomIndex];\r",
															"pm.collectionVariables.set('rewardValueType', selectedRewardValueType);\r",
															"if (selectedRewardValueType == \"PERCENTAGE\") {\r",
															"    pm.collectionVariables.set('rewardRuleValue', 100);\r",
															"} else {\r",
															"    pm.collectionVariables.set('rewardRuleValue', 1);\r",
															"}\r",
															"\r",
															"pm.collectionVariables.set('trxDaysOfWeek', pm.variables.replaceIn('{{$randomWeekday}}').toString().toUpperCase());\r",
															"pm.collectionVariables.set('trxDayEndTime', endTime[0]);\r",
															"pm.collectionVariables.set('trxThresholdFrom', 10);\r",
															"pm.collectionVariables.set('trxThresholdTo', 50);\r",
															"pm.collectionVariables.set('trxCountFrom', 3);\r",
															"pm.collectionVariables.set('trxCountTo', 11);\r",
															"pm.collectionVariables.set('trxRewardLimitFrequency', 'DAILY');\r",
															"pm.collectionVariables.set('trxRewardLimitValue', 3);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \n  \"initiativeRewardType\": \"REFUND\",\n  \"rewardRule\": {\n    \"_type\": \"{{rewardRuleType}}\",\n    \"rewardValue\": {{rewardRuleValue}},\n    \"rewardValueType\": \"{{rewardValueType}}\"\n  },\n  \"trxRule\": {\n    \"daysOfWeek\": [\n      {\n        \"daysOfWeek\": [\n          \"{{trxDaysOfWeek}}\"\n        ],\n        \"intervals\": [\n          {\n            \"startTime\": \"00:00:00.000\",\n            \"endTime\": \"{{trxDayEndTime}}\"\n          }\n        ]\n      }\n    ],\n    \"threshold\": {\n      \"from\": {{trxThresholdFrom}},\n      \"fromIncluded\": true,\n      \"to\": {{trxThresholdTo}},\n      \"toIncluded\": true\n    },\n    \"mccFilter\": {\n      \"allowedList\": true,\n      \"values\": [\n        \"0742\", \"0743\", \"0744\"\n      ]\n    },\n    \"trxCount\": {\n      \"from\": {{trxCountFrom}},\n      \"fromIncluded\": true,\n      \"to\": {{trxCountTo}},\n      \"toIncluded\": true\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId/reward",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId",
														"reward"
													],
													"variable": [
														{
															"key": "initiativeId",
															"value": "{{initiativeId}}",
															"description": "(Required) The initiative ID"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP5-Update Initiative Refund Rule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative creation - STEP5 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"/*const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
															"timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"\r",
															"const accumulatedType = [\"BUDGET_EXHAUSTED\",\"THRESHOLD_REACHED\"];\r",
															"accumulatedTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"\r",
															"pm.collectionVariables.set('timeType', timeType[timeTypeRandomIndex]);\r",
															"pm.collectionVariables.set('accumulatedType', accumulatedType[accumulatedTypeRandomIndex]);\r",
															"pm.collectionVariables.set('identificationCode', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"*/\r",
															"\r",
															"\r",
															"let refundType = [\"timeParameter\", \"accumulatedAmount\"];\r",
															"refundTypeRandomIndex = _.random(0, refundType.length - 1);\r",
															"\r",
															"const refundTypeSelected = refundType[refundTypeRandomIndex];\r",
															"let body = {};\r",
															"if (refundTypeSelected == \"timeParameter\") {\r",
															"    const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
															"    timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"    body = {\r",
															"        timeParameter: {\r",
															"            timeType: timeType[timeTypeRandomIndex]\r",
															"        }\r",
															"    };\r",
															"} else {\r",
															"    const accumulatedType = [\"BUDGET_EXHAUSTED\", \"THRESHOLD_REACHED\"];\r",
															"    accumulatedTypeRandomIndex = _.random(0, accumulatedType.length - 1);\r",
															"    const accumulatedTypeSelected = accumulatedType[accumulatedTypeRandomIndex];\r",
															"    if (accumulatedTypeSelected == \"BUDGET_EXHAUSTED\") {\r",
															"        body = {\r",
															"            accumulatedAmount: {\r",
															"                accumulatedType: \"BUDGET_EXHAUSTED\"\r",
															"            }\r",
															"        };\r",
															"    } else {\r",
															"        body = {\r",
															"            accumulatedAmount: {\r",
															"                accumulatedType: \"THRESHOLD_REACHED\",\r",
															"                refundThreshold: 10\r",
															"            }\r",
															"        };\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.collectionVariables.set('body', JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{body}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId/refund",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId",
														"refund"
													],
													"variable": [
														{
															"key": "initiativeId",
															"value": "{{initiativeId}}",
															"description": "(Required) The initiative ID"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "PAGOPA - Initiative update status APPROVED",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative approving - Generate Portal Token (PagoPA Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalTokenPagopa\", textResponse);\r",
															"});\r",
															"\r",
															"//response time is less than 1s\r",
															"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Pagopa}}\",\r\n  \"name\": \"{{name_Pagopa}}\",\r\n  \"familyName\": \"{{familyName_Pagopa}}\",\r\n  \"email\": \"{{email_Pagopa}}\",\r\n  \"orgId\": \"{{orgId_Pagopa}}\",\r\n  \"orgVAT\": \"{{orgVAT_Pagopa}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"ADMIN\",\r\n  \"orgRole\": \"{{orgRole_Pagopa}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update initiative into APPROVED status",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative approving - PagoPA Admin update Initiative status into TO_CHECK -(Responses with 204)\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//setTimeout(function(){}, 20000); //milliseconds"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalTokenPagopa}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId}}/approved",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId}}",
														"approved"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ENTE - Initiative PUBLISHED",
									"item": [
										{
											"name": "Generate Portal Token Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative pubblication - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															"\r",
															"//response time is less than 1s\r",
															"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Ente}}\",\r\n  \"name\": \"{{name_Ente}}\",\r\n  \"familyName\": \"{{familyName_Ente}}\",\r\n  \"email\": \"{{email_Ente}}\",\r\n  \"orgId\": \"{{orgId_Ente}}\",\r\n  \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"ADMIN\",\r\n  \"orgRole\": \"{{orgRole_Ente}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Initiative PUBLISHED",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Initiative pubblication - Ente Admin updates initiative status into PUBLISHED -(Responses with 204)\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"/*let body;\r",
															"baseUrlInitiative = pm.variables.get('baseUrlInitiative')\r",
															"if(baseUrlInitiative.includes('localhost')){\r",
															"    body = {\r",
															"        mode: 'raw',\r",
															"        raw: JSON.stringify({\r",
															"            organizationName: 'Comune di Milano',\r",
															"            organizationFiscalCode: '11122233344',\r",
															"            organizationUserId: 'b8986bf2-1f93-4827-ab16-b21eb8aeae2b',\r",
															"            organizationUserRole: 'admin'\r",
															"        })\r",
															"    }\r",
															"    pm.request.headers.add({\r",
															"        key: \"Content-Type\",\r",
															"        value: \"application/json\"\r",
															"    });\r",
															"    pm.variables.set('body', JSON.stringify(body));\r",
															"    pm.request.body.update(body);\r",
															"}\r",
															"*/\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId}}/published",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId}}",
														"published"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Unhappy case - Payment Instrument - Initiative not active for this User - Generate token IO', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_fake}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enroll Instrument",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active for this User - enrolling instrument - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active for this User - enrolling instrument - Message is The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/instruments/120753",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"instruments",
												"120753"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active for this User - Get Status - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active for this User - Get Status - Message is The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active for this User - Get Detail - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active for this User - Get Detail - Message is The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Initiative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active for this User - Delete Initiative - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative/idpay/initiative/{{initiativeId}}",
											"host": [
												"{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative"
											],
											"path": [
												"idpay",
												"initiative",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Enroll initiative not active - 404",
							"item": [
								{
									"name": "ENTE - Initiative creation",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Unhappy case - Payment instrument - Initiative not active - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Ente}}\",\r\n  \"name\": \"{{name_Ente}}\",\r\n  \"familyName\": \"{{familyName_Ente}}\",\r\n  \"email\": \"{{email_Ente}}\",\r\n  \"orgId\": \"{{orgId_Ente}}\",\r\n  \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n  \"orgRole\": \"{{orgRole_Ente}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP1-Insert Initiative (Service Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//pm.collectionVariables.set('serviceId', pm.variables.replaceIn('{{$randomUUID}}'));\r",
															"let moment = require('moment');\r",
															"const now = String(moment().format('DD-MM-YYYY hh:mm'));\r",
															"const serviceName = 'Test funzionali App IO Wallet ' + now;\r",
															"pm.collectionVariables.set('serviceName', serviceName);\r",
															"\r",
															"pm.collectionVariables.set('description', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"\r",
															"pm.collectionVariables.set('channel_type', 'web');\r",
															"pm.collectionVariables.set('channel_contact', pm.variables.replaceIn('{{$randomUrl}}'));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);\r",
															"// console.log('jsondata', jsonData);\r",
															"// console.log('jsondata.initiativeId', jsonData.initiativeId);\r",
															"pm.collectionVariables.set('initiativeId-draft', jsonData.initiativeId);\r",
															"\r",
															"pm.test(\"Wallet - Unhappy case - Payment instrument - Initiative not active - Initiative creation - STEP1 - Response status is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Wallet - Unhappy case - Payment instrument - Initiative not active - Initiative creation - STEP1 - Response body must contain initiativeId field\", function () {\r",
															"    let jsonResponse = pm.response.json();\r",
															"    pm.expect(jsonResponse).have.property(\"initiativeId\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceIO\": true,\n    \"serviceName\": \"{{serviceName}}\",\n    \"serviceScope\": \"LOCAL\",\n    \"description\": \"{{description}}\",\n    \"privacyLink\": \"https://www.google.it\",\n    \"tcLink\": \"https://www.google.com\",\n    \"channels\": [\n        {\n            \"type\": \"{{channel_type}}\",\n            \"contact\": \"{{channel_contact}}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/info",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"info"
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										}
									]
								},
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Unhappy case - Payment instrument - Initiative not active - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_fake}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enroll Instrument",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active - Enroll instrument - Response with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active - Enroll instrument - Response message is equals to: The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId-draft}}/instruments/120753",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId-draft}}",
												"instruments",
												"120753"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active - Get wallet status - Response with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active - Get wallet status - Response message is equals to: The requested initiative is not active for the current user! \", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId-draft}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId-draft}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active - Get wallet detail - Response with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Payment Instrument - Initiative not active - Get wallet detail - Response message is equals to: The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId-draft}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId-draft}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ISSUER Enroll Instrument already in use - 403",
							"item": [
								{
									"name": "ISSUER Onboarding User with Whitelist",
									"item": [
										{
											"name": "Accept T&C",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument already in use - Onboarding user with whitelist - ISSUER - Accept T&C - Response status is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{issuerSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "it_IT",
														"type": "text"
													},
													{
														"key": "Fiscal-Code",
														"value": "{{CF_ISSUER_2}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeEnrollWhitelist}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/hb/onboarding/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"hb",
														"onboarding",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Prerequisites Check",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument already in use - Onboarding user with whitelist - ISSUER - Prerequisites Check - Response status is 202\", function () {\r",
															"    pm.response.to.have.status(202);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{issuerSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "it_IT",
														"type": "text"
													},
													{
														"key": "Fiscal-Code",
														"value": "{{CF_ISSUER_2}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeEnrollWhitelist}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/hb/onboarding/initiative",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"hb",
														"onboarding",
														"initiative"
													]
												}
											},
											"response": []
										},
										{
											"name": "Status Onboarding",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument already in use - Onboarding user with whitelist - ISSUER - Status onboarding - Response status is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument already in use - Onboarding user with whitelist - ISSUER - Status onboarding - Onboarding status is ONBOARDING_OK\", function () {\r",
															"    let jsonResponse = pm.response.json()\r",
															"    pm.expect(jsonResponse.status).equals('ONBOARDING_OK');\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(()=> {}, 10000)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Fiscal-Code",
														"value": "{{CF_ISSUER_2}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{issuerSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "it_IT",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/idpay/hb/onboarding/{{initiativeEnrollWhitelist}}/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"hb",
														"onboarding",
														"{{initiativeEnrollWhitelist}}",
														"status"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Enroll Instrument",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument already in use - Enroll instrument - Response status is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument already in use - Enroll instrument - Response message is equals to: Payment instrument already associated to another citizen\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('Payment instrument already associated to another citizen');\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(()=> {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{issuerSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "it_IT",
												"type": "text"
											},
											{
												"key": "Fiscal-Code",
												"value": "{{CF_ISSUER_2}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"brand\": \"VISA\",\r\n    \"type\": \"DEB\",\r\n    \"pgpPan\": \"-----BEGIN PGP MESSAGE-----\\n\\nwYwDxJQrySYbEVIBA/9KY5u6uO6iBrNwQCwpw5ZmDlvZ0A/1GVfFPl+nRouUdyrY\\nO42c9mIko5ytY4jsphTKQWJl2dWm+3T/orDkImBaOnxuKCtJwEA5itXmbXqK8JnT\\nYy9o1Tk6FsWbCXusVm0KNOFeAgjv4/gib4sIjt+zjSnxSBYj6LT0KknEdcs7GNJF\\nAbGNMy+oiENHerrELX4vK4y63H0QBs4Ptn1zmRnG5Jp4K+Edrlb/TOtG6eldAXt/\\nS1DpAzBFhL0g0EtKNBHqE2iPle30\\n=0OL5\\n-----END PGP MESSAGE-----\\n\",\r\n    \"expireMonth\": \"08\",\r\n    \"expireYear\": \"2023\",\r\n    \"issuerAbiCode\": \"03069\",\r\n    \"holder\": \"TEST\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/hb/wallet/{{initiativeEnrollWhitelist}}/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"hb",
												"wallet",
												"{{initiativeEnrollWhitelist}}",
												"instruments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument already in use - Get wallet detail - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(()=> {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{issuerSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "it_IT",
												"type": "text"
											},
											{
												"key": "Fiscal-Code",
												"value": "{{CF_ISSUER_2}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/hb/wallet/{{initiativeEnrollWhitelist}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"hb",
												"wallet",
												"{{initiativeEnrollWhitelist}}",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument already in use - Get wallet status - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument already in use - Get wallet status - Wallet status is equals to NOT_REFUNDABLE\", function () {\r",
													"    let responseJson = pm.response.json()\r",
													"    pm.expect(responseJson.status).to.be.eql('NOT_REFUNDABLE');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{issuerSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "it_IT",
												"type": "text"
											},
											{
												"key": "Fiscal-Code",
												"value": "{{CF_ISSUER_2}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/hb/wallet/{{initiativeEnrollWhitelist}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"hb",
												"wallet",
												"{{initiativeEnrollWhitelist}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get List PI associated to initiative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument - Get the list of payment instrument associated to initiative - Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Wallet - Unhappy case - Payment instrument - ISSUER Enroll instrument - Get the list of payment instrument associated to initiative - Response is an empty list of payment instrument associated to initiative\", function () {\r",
													"    let jsonResponse = pm.response.json()\r",
													"    pm.expect(jsonResponse.instrumentList.length).equals(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{issuerSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "it_IT",
												"type": "text"
											},
											{
												"key": "Fiscal-Code",
												"value": "{{CF_ISSUER_2}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/hb/wallet/{{initiativeEnrollWhitelist}}/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"hb",
												"wallet",
												"{{initiativeEnrollWhitelist}}",
												"instruments"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Get Hpan List - initiativeId field empty - 404",
					"item": [
						{
							"name": "Generate Token IO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Wallet - Unhappy case - Get Hpan list - Initiative Id field empty - Generate token IO', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{genericSubscriptionKey}}",
										"type": "default"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rtd",
										"mock-io",
										"login"
									],
									"query": [
										{
											"key": "fiscalCode",
											"value": "{{CF_fake}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Hpan List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Wallet - Unhappy case - Get Hpan list - Initiative Id field empty - Response status is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Wallet - Unhappy case - Get Hpan list - Initiative Id field empty - Response message is The requested initiative is not active for the current user!\", function () {\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/wallet//instruments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"wallet",
										"",
										"instruments"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Iban",
					"item": [
						{
							"name": "Enroll Iban initiative not active for this User - 404",
							"item": [
								{
									"name": "ENTE - Initiative creation",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Ente}}\",\r\n  \"name\": \"{{name_Ente}}\",\r\n  \"familyName\": \"{{familyName_Ente}}\",\r\n  \"email\": \"{{email_Ente}}\",\r\n  \"orgId\": \"{{orgId_Ente}}\",\r\n  \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n  \"orgRole\": \"{{orgRole_Ente}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP1-Insert Initiative (Service Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//pm.collectionVariables.set('serviceId', pm.variables.replaceIn('{{$randomUUID}}'));\r",
															"let moment = require('moment');\r",
															"const now = String(moment().format('DD-MM-YYYY hh:mm'));\r",
															"const serviceName = 'Test funzionali App IO Wallet ' + now;\r",
															"pm.collectionVariables.set('serviceName', serviceName);\r",
															"\r",
															"pm.collectionVariables.set('description', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"\r",
															"pm.collectionVariables.set('channel_type', 'web');\r",
															"pm.collectionVariables.set('channel_contact', pm.variables.replaceIn('{{$randomUrl}}'));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);\r",
															"// console.log('jsondata', jsonData);\r",
															"// console.log('jsondata.initiativeId', jsonData.initiativeId);\r",
															"pm.collectionVariables.set('initiativeId', jsonData.initiativeId);\r",
															"\r",
															"pm.test(\"Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative creation - STEP1 - Responses with 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative creation - STEP1 - Response body must contain initiativeId field\", function () {\r",
															"    let jsonResponse = pm.response.json();\r",
															"    pm.expect(jsonResponse).have.property(\"initiativeId\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceIO\": true,\n    \"serviceName\": \"{{serviceName}}\",\n    \"serviceScope\": \"LOCAL\",\n    \"description\": \"{{description}}\",\n    \"privacyLink\": \"https://www.google.it\",\n    \"tcLink\": \"https://www.google.com\",\n    \"channels\": [\n        {\n            \"type\": \"{{channel_type}}\",\n            \"contact\": \"{{channel_contact}}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/info",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"info"
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										},
										{
											"name": "STEP2-Update Initiative (general Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"let moment = require('moment');\r",
															"//Format: YYYY-MM-DD\r",
															"let today = String(moment().format('YYYY-MM-DD'));\r",
															"let todayP1 = String(moment().add(1,'months').format('YYYY-MM-DD'));\r",
															"let todayP2 = String(moment().add(2,'months').format('YYYY-MM-DD'));\r",
															"let todayP3 = String(moment().add(3,'months').format('YYYY-MM-DD'));\r",
															"\r",
															"/*\r",
															"var futureDate = pm.variables.replaceIn('{{$$randomDateFuture}}');\r",
															"pm.collectionVariables.set('...', _.random(0, 180));\r",
															"*/\r",
															"//_.floor(_.random(1.0, 100000.0, true),2)\r",
															"pm.collectionVariables.set('budget', _.floor(_.random(10000, 100000, true),2));\r",
															"pm.collectionVariables.set('beneficiaryType', 'PF');\r",
															"//pm.collectionVariables.set('beneficiaryKnown', pm.variables.replaceIn('{{$randomBoolean}}'));\r",
															"pm.collectionVariables.set('beneficiaryKnown', false);\r",
															"pm.collectionVariables.set('rankingEnabled', false);\r",
															"pm.collectionVariables.set('beneficiaryBudget', pm.variables.replaceIn('{{$randomInt}}'));//default max 1000\r",
															"pm.collectionVariables.set('rankingStartDate', today);\r",
															"pm.collectionVariables.set('rankingEndDate', todayP1);\r",
															"pm.collectionVariables.set('startDate', todayP2);\r",
															"pm.collectionVariables.set('endDate', todayP3);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative creation - STEP2 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"budget\": {{budget}},\n    \"beneficiaryType\": \"{{beneficiaryType}}\",\n    \"beneficiaryKnown\": {{beneficiaryKnown}},\n    \"rankingEnabled\": {{rankingEnabled}},\n    \"beneficiaryBudget\": {{beneficiaryBudget}},\n    \"rankingStartDate\": \"{{rankingStartDate}}\",\n    \"rankingEndDate\": \"{{rankingEndDate}}\",\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\",\n    \"descriptionMap\": {\n        \"it\": \"it\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId/general",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId",
														"general"
													],
													"variable": [
														{
															"key": "initiativeId",
															"value": "{{initiativeId}}",
															"description": "(Required) The initiative ID"
														}
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										},
										{
											"name": "STEP3-Update Initiative (criteria)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative creation - STEP3 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"automatedCriteria\": [\r\n        {\r\n            \"authority\": \"INPS\",\r\n            \"code\": \"ISEE\",\r\n            \"operator\": \"GT\",\r\n            \"value\": \"1\",\r\n            \"value2\": \"\",\r\n            \"iseeTypes\": [\r\n                \"ORDINARIO\",\r\n                \"MINORENNE\",\r\n                \"UNIVERSITARIO\",\r\n                \"SOCIOSANITARIO\",\r\n                \"DOTTORATO\",\r\n                \"RESIDENZIALE\",\r\n                \"CORRENTE\"\r\n            ]\r\n        }\r\n    ],\r\n    \"selfDeclarationCriteria\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId}}/beneficiary",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId}}",
														"beneficiary"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP4-Update Initiative Trx-Reward rules",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative creation - STEP4 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const d = new Date();\r",
															"dateString = d.toISOString()\r",
															"let endTime = dateString.split('T');\r",
															"endTime = endTime[1].split('Z');\r",
															"\r",
															"pm.collectionVariables.set('rewardRuleType', 'rewardValue');\r",
															"const rewardValueTypes = [\"PERCENTAGE\", \"ABSOLUTE\"];\r",
															"rewardValueTypeRandomIndex = _.random(0, rewardValueTypes.length - 1);\r",
															"const selectedRewardValueType = rewardValueTypes[rewardValueTypeRandomIndex];\r",
															"pm.collectionVariables.set('rewardValueType', selectedRewardValueType);\r",
															"if (selectedRewardValueType == \"PERCENTAGE\") {\r",
															"    pm.collectionVariables.set('rewardRuleValue', 100);\r",
															"} else {\r",
															"    pm.collectionVariables.set('rewardRuleValue', 1);\r",
															"}\r",
															"\r",
															"pm.collectionVariables.set('trxDaysOfWeek', pm.variables.replaceIn('{{$randomWeekday}}').toString().toUpperCase());\r",
															"pm.collectionVariables.set('trxDayEndTime', endTime[0]);\r",
															"pm.collectionVariables.set('trxThresholdFrom', 10);\r",
															"pm.collectionVariables.set('trxThresholdTo', 50);\r",
															"pm.collectionVariables.set('trxCountFrom', 3);\r",
															"pm.collectionVariables.set('trxCountTo', 11);\r",
															"pm.collectionVariables.set('trxRewardLimitFrequency', 'DAILY');\r",
															"pm.collectionVariables.set('trxRewardLimitValue', 3);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"initiativeRewardType\": \"REFUND\",\n    \"rewardRule\": {\n        \"_type\": \"{{rewardRuleType}}\",\n        \"rewardValue\": {{rewardRuleValue}},\n        \"rewardValueType\": \"{{rewardValueType}}\"\n    },\n    \"trxRule\": {\n        \"daysOfWeek\": [\n            {\n                \"daysOfWeek\": [\n                    \"{{trxDaysOfWeek}}\"\n                ],\n                \"intervals\": [\n                    {\n                        \"startTime\": \"00:00:00.000\",\n                        \"endTime\": \"{{trxDayEndTime}}\"\n                    }\n                ]\n            }\n        ],\n        \"threshold\": {\n            \"from\": {{trxThresholdFrom}},\n            \"fromIncluded\": true,\n            \"to\": {{trxThresholdTo}},\n            \"toIncluded\": true\n        },\n        \"mccFilter\": {\n            \"allowedList\": true,\n            \"values\": [\n                \"0742\",\n                \"0743\",\n                \"0744\"\n            ]\n        },\n        \"trxCount\": {\n            \"from\": {{trxCountFrom}},\n            \"fromIncluded\": true,\n            \"to\": {{trxCountTo}},\n            \"toIncluded\": true\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId/reward",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId",
														"reward"
													],
													"variable": [
														{
															"key": "initiativeId",
															"value": "{{initiativeId}}",
															"description": "(Required) The initiative ID"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP5-Update Initiative Refund Rule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative creation - STEP5 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"/*const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
															"timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"\r",
															"const accumulatedType = [\"BUDGET_EXHAUSTED\",\"THRESHOLD_REACHED\"];\r",
															"accumulatedTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"\r",
															"pm.collectionVariables.set('timeType', timeType[timeTypeRandomIndex]);\r",
															"pm.collectionVariables.set('accumulatedType', accumulatedType[accumulatedTypeRandomIndex]);\r",
															"pm.collectionVariables.set('identificationCode', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"*/\r",
															"\r",
															"\r",
															"let refundType = [\"timeParameter\", \"accumulatedAmount\"];\r",
															"refundTypeRandomIndex = _.random(0, refundType.length - 1);\r",
															"\r",
															"const refundTypeSelected = refundType[refundTypeRandomIndex];\r",
															"let body = {};\r",
															"if (refundTypeSelected == \"timeParameter\") {\r",
															"    const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
															"    timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"    body = {\r",
															"        timeParameter: {\r",
															"            timeType: timeType[timeTypeRandomIndex]\r",
															"        }\r",
															"    };\r",
															"} else {\r",
															"    const accumulatedType = [\"BUDGET_EXHAUSTED\", \"THRESHOLD_REACHED\"];\r",
															"    accumulatedTypeRandomIndex = _.random(0, accumulatedType.length - 1);\r",
															"    const accumulatedTypeSelected = accumulatedType[accumulatedTypeRandomIndex];\r",
															"    if (accumulatedTypeSelected == \"BUDGET_EXHAUSTED\") {\r",
															"        body = {\r",
															"            accumulatedAmount: {\r",
															"                accumulatedType: \"BUDGET_EXHAUSTED\"\r",
															"            }\r",
															"        };\r",
															"    } else {\r",
															"        body = {\r",
															"            accumulatedAmount: {\r",
															"                accumulatedType: \"THRESHOLD_REACHED\",\r",
															"                refundThreshold: 10\r",
															"            }\r",
															"        };\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.collectionVariables.set('body', JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{body}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId/refund",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId",
														"refund"
													],
													"variable": [
														{
															"key": "initiativeId",
															"value": "{{initiativeId}}",
															"description": "(Required) The initiative ID"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "PAGOPA - Initiative update status APPROVED",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative approving - Generate Portal Token (PagoPA Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalTokenPagopa\", textResponse);\r",
															"});\r",
															"\r",
															"//response time is less than 1s\r",
															"tests[\"Response time is less than 2s\"] = responseTime < 2000;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Pagopa}}\",\r\n  \"name\": \"{{name_Pagopa}}\",\r\n  \"familyName\": \"{{familyName_Pagopa}}\",\r\n  \"email\": \"{{email_Pagopa}}\",\r\n  \"orgId\": \"{{orgId_Pagopa}}\",\r\n  \"orgVAT\": \"{{orgVAT_Pagopa}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Pagopa}}\",\r\n  \"orgRole\": \"{{orgRole_Pagopa}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update initiative into APPROVED status",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative approving - PagoPA Admin update Initiative status into TO_CHECK -(Responses with 204)\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//setTimeout(function(){}, 20000); //milliseconds"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalTokenPagopa}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId}}/approved",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId}}",
														"approved"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ENTE - Initiative PUBLISHED",
									"item": [
										{
											"name": "Generate Portal Token Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative pubblication - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															"\r",
															"//response time is less than 1s\r",
															"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Ente}}\",\r\n  \"name\": \"{{name_Ente}}\",\r\n  \"familyName\": \"{{familyName_Ente}}\",\r\n  \"email\": \"{{email_Ente}}\",\r\n  \"orgId\": \"{{orgId_Ente}}\",\r\n  \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n  \"orgRole\": \"{{orgRole_Ente}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Initiative PUBLISHED",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Initiative not active for this User - Initiative pubblication - Ente Admin updates initiative status into PUBLISHED -(Responses with 204)\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 10000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId}}/published",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId}}",
														"published"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Unhappy case - Iban - Initiative not active for this User - Generate token IO', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_fake}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enroll Iban",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Initiative not active for this User - enrolling iban - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Iban - Initiative not active for this User - enrolling iban - Message is The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"iban\": \"09P3608105138205493205495\",\r\n    \"description\": \"conto cointestato\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/iban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"iban"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Initiative not active for this User - Get Status - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Iban - Initiative not active for this User - Get Status - Message is The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Initiative not active for this User - Get Detail - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Iban - Initiative not active for this User - Get Detail - Message is The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Initiative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Initiative not active for this User - Delete Initiative - Status test 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative/idpay/initiative/{{initiativeId}}",
											"host": [
												"{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative"
											],
											"path": [
												"idpay",
												"initiative",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Enroll Iban not italian - 400",
							"item": [
								{
									"name": "ENTE - Initiative creation",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative creation - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Ente}}\",\r\n  \"name\": \"{{name_Ente}}\",\r\n  \"familyName\": \"{{familyName_Ente}}\",\r\n  \"email\": \"{{email_Ente}}\",\r\n  \"orgId\": \"{{orgId_Ente}}\",\r\n  \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Ente}}\",\r\n  \"orgRole\": \"{{orgRole_Ente}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP1-Insert Initiative (Service Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//pm.collectionVariables.set('serviceId', pm.variables.replaceIn('{{$randomUUID}}'));\r",
															"let moment = require('moment');\r",
															"const now = String(moment().format('DD-MM-YYYY hh:mm'));\r",
															"const serviceName = 'Test funzionali App IO Wallet ' + now;\r",
															"pm.collectionVariables.set('serviceName', serviceName);\r",
															"\r",
															"pm.collectionVariables.set('description', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"\r",
															"pm.collectionVariables.set('channel_type', 'web');\r",
															"pm.collectionVariables.set('channel_contact', pm.variables.replaceIn('{{$randomUrl}}'));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);\r",
															"// console.log('jsondata', jsonData);\r",
															"// console.log('jsondata.initiativeId', jsonData.initiativeId);\r",
															"pm.collectionVariables.set('initiativeId', jsonData.initiativeId);\r",
															"\r",
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative creation - STEP1 - Responses with 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative creation - STEP1 - Response body must contain initiativeId field\", function () {\r",
															"    let jsonResponse = pm.response.json();\r",
															"    pm.expect(jsonResponse).have.property(\"initiativeId\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceIO\": true,\n    \"serviceName\": \"{{serviceName}}\",\n    \"serviceScope\": \"LOCAL\",\n    \"description\": \"{{description}}\",\n    \"privacyLink\": \"https://www.google.it\",\n    \"tcLink\": \"https://www.google.com\",\n    \"channels\": [\n        {\n            \"type\": \"{{channel_type}}\",\n            \"contact\": \"{{channel_contact}}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/info",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"info"
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										},
										{
											"name": "STEP2-Update Initiative (general Info)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"let moment = require('moment');\r",
															"//Format: YYYY-MM-DD\r",
															"let today = String(moment().format('YYYY-MM-DD'));\r",
															"let todayP1 = String(moment().add(1,'months').format('YYYY-MM-DD'));\r",
															"let todayP2 = String(moment().add(2,'months').format('YYYY-MM-DD'));\r",
															"let todayP3 = String(moment().add(3,'months').format('YYYY-MM-DD'));\r",
															"\r",
															"/*\r",
															"var futureDate = pm.variables.replaceIn('{{$$randomDateFuture}}');\r",
															"pm.collectionVariables.set('...', _.random(0, 180));\r",
															"*/\r",
															"//_.floor(_.random(1.0, 100000.0, true),2)\r",
															"pm.collectionVariables.set('budget', _.floor(_.random(10000, 100000, true),2));\r",
															"pm.collectionVariables.set('beneficiaryType', 'PF');\r",
															"//pm.collectionVariables.set('beneficiaryKnown', pm.variables.replaceIn('{{$randomBoolean}}'));\r",
															"pm.collectionVariables.set('beneficiaryKnown', false);\r",
															"pm.collectionVariables.set('rankingEnabled', false);\r",
															"pm.collectionVariables.set('beneficiaryBudget', pm.variables.replaceIn('{{$randomInt}}'));//default max 1000\r",
															"pm.collectionVariables.set('rankingStartDate', today);\r",
															"pm.collectionVariables.set('rankingEndDate', todayP1);\r",
															"pm.collectionVariables.set('startDate', todayP2);\r",
															"pm.collectionVariables.set('endDate', todayP3);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative creation - STEP2 Draft - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"budget\": {{budget}},\n    \"beneficiaryType\": \"{{beneficiaryType}}\",\n    \"beneficiaryKnown\": {{beneficiaryKnown}},\n    \"rankingEnabled\": {{rankingEnabled}},\n    \"beneficiaryBudget\": {{beneficiaryBudget}},\n    \"rankingStartDate\": \"{{rankingStartDate}}\",\n    \"rankingEndDate\": \"{{rankingEndDate}}\",\n    \"startDate\": \"{{startDate}}\",\n    \"endDate\": \"{{endDate}}\",\n    \"descriptionMap\": {\n        \"it\": \"it\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId/general",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId",
														"general"
													],
													"variable": [
														{
															"key": "initiativeId",
															"value": "{{initiativeId}}",
															"description": "(Required) The initiative ID"
														}
													]
												},
												"description": "Save initiative and first subset of data 'general info'"
											},
											"response": []
										},
										{
											"name": "STEP3-Update Initiative (criteria)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative creation - STEP3 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"automatedCriteria\": [\r\n        {\r\n            \"authority\": \"INPS\",\r\n            \"code\": \"ISEE\",\r\n            \"operator\": \"GT\",\r\n            \"value\": \"1\",\r\n            \"value2\": \"\",\r\n            \"iseeTypes\": [\r\n                \"ORDINARIO\",\r\n                \"MINORENNE\",\r\n                \"UNIVERSITARIO\",\r\n                \"SOCIOSANITARIO\",\r\n                \"DOTTORATO\",\r\n                \"RESIDENZIALE\",\r\n                \"CORRENTE\"\r\n            ]\r\n        }\r\n    ],\r\n    \"selfDeclarationCriteria\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId}}/beneficiary",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId}}",
														"beneficiary"
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP4-Update Initiative Trx-Reward rules",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative creation - STEP4 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const d = new Date();\r",
															"dateString = d.toISOString()\r",
															"let endTime = dateString.split('T');\r",
															"endTime = endTime[1].split('Z');\r",
															"\r",
															"pm.collectionVariables.set('rewardRuleType', 'rewardValue');\r",
															"const rewardValueTypes = [\"PERCENTAGE\", \"ABSOLUTE\"];\r",
															"rewardValueTypeRandomIndex = _.random(0, rewardValueTypes.length - 1);\r",
															"const selectedRewardValueType = rewardValueTypes[rewardValueTypeRandomIndex];\r",
															"pm.collectionVariables.set('rewardValueType', selectedRewardValueType);\r",
															"if (selectedRewardValueType == \"PERCENTAGE\") {\r",
															"    pm.collectionVariables.set('rewardRuleValue', 100);\r",
															"} else {\r",
															"    pm.collectionVariables.set('rewardRuleValue', 1);\r",
															"}\r",
															"\r",
															"pm.collectionVariables.set('trxDaysOfWeek', pm.variables.replaceIn('{{$randomWeekday}}').toString().toUpperCase());\r",
															"pm.collectionVariables.set('trxDayEndTime', endTime[0]);\r",
															"pm.collectionVariables.set('trxThresholdFrom', 10);\r",
															"pm.collectionVariables.set('trxThresholdTo', 50);\r",
															"pm.collectionVariables.set('trxCountFrom', 3);\r",
															"pm.collectionVariables.set('trxCountTo', 11);\r",
															"pm.collectionVariables.set('trxRewardLimitFrequency', 'DAILY');\r",
															"pm.collectionVariables.set('trxRewardLimitValue', 3);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"initiativeRewardType\": \"REFUND\",\n    \"rewardRule\": {\n        \"_type\": \"{{rewardRuleType}}\",\n        \"rewardValue\": {{rewardRuleValue}},\n        \"rewardValueType\": \"{{rewardValueType}}\"\n    },\n    \"trxRule\": {\n        \"daysOfWeek\": [\n            {\n                \"daysOfWeek\": [\n                    \"{{trxDaysOfWeek}}\"\n                ],\n                \"intervals\": [\n                    {\n                        \"startTime\": \"00:00:00.000\",\n                        \"endTime\": \"{{trxDayEndTime}}\"\n                    }\n                ]\n            }\n        ],\n        \"threshold\": {\n            \"from\": {{trxThresholdFrom}},\n            \"fromIncluded\": true,\n            \"to\": {{trxThresholdTo}},\n            \"toIncluded\": true\n        },\n        \"mccFilter\": {\n            \"allowedList\": true,\n            \"values\": [\n                \"0742\",\n                \"0743\",\n                \"0744\"\n            ]\n        },\n        \"trxCount\": {\n            \"from\": {{trxCountFrom}},\n            \"fromIncluded\": true,\n            \"to\": {{trxCountTo}},\n            \"toIncluded\": true\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId/reward",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId",
														"reward"
													],
													"variable": [
														{
															"key": "initiativeId",
															"value": "{{initiativeId}}",
															"description": "(Required) The initiative ID"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "STEP5-Update Initiative Refund Rule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative creation - STEP5 - Responses with 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"/*const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
															"timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"\r",
															"const accumulatedType = [\"BUDGET_EXHAUSTED\",\"THRESHOLD_REACHED\"];\r",
															"accumulatedTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"\r",
															"pm.collectionVariables.set('timeType', timeType[timeTypeRandomIndex]);\r",
															"pm.collectionVariables.set('accumulatedType', accumulatedType[accumulatedTypeRandomIndex]);\r",
															"pm.collectionVariables.set('identificationCode', pm.variables.replaceIn('{{$randomLoremSentence}}'));\r",
															"*/\r",
															"\r",
															"\r",
															"let refundType = [\"timeParameter\", \"accumulatedAmount\"];\r",
															"refundTypeRandomIndex = _.random(0, refundType.length - 1);\r",
															"\r",
															"const refundTypeSelected = refundType[refundTypeRandomIndex];\r",
															"let body = {};\r",
															"if (refundTypeSelected == \"timeParameter\") {\r",
															"    const timeType = [\"CLOSED\",\"DAILY\",\"WEEKLY\",\"MONTHLY\",\"QUARTERLY\"];\r",
															"    timeTypeRandomIndex = _.random(0, timeType.length-1);\r",
															"    body = {\r",
															"        timeParameter: {\r",
															"            timeType: timeType[timeTypeRandomIndex]\r",
															"        }\r",
															"    };\r",
															"} else {\r",
															"    const accumulatedType = [\"BUDGET_EXHAUSTED\", \"THRESHOLD_REACHED\"];\r",
															"    accumulatedTypeRandomIndex = _.random(0, accumulatedType.length - 1);\r",
															"    const accumulatedTypeSelected = accumulatedType[accumulatedTypeRandomIndex];\r",
															"    if (accumulatedTypeSelected == \"BUDGET_EXHAUSTED\") {\r",
															"        body = {\r",
															"            accumulatedAmount: {\r",
															"                accumulatedType: \"BUDGET_EXHAUSTED\"\r",
															"            }\r",
															"        };\r",
															"    } else {\r",
															"        body = {\r",
															"            accumulatedAmount: {\r",
															"                accumulatedType: \"THRESHOLD_REACHED\",\r",
															"                refundThreshold: 10\r",
															"            }\r",
															"        };\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.collectionVariables.set('body', JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{body}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlInitiative}}/:initiativeId/refund",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														":initiativeId",
														"refund"
													],
													"variable": [
														{
															"key": "initiativeId",
															"value": "{{initiativeId}}",
															"description": "(Required) The initiative ID"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "PAGOPA - Initiative update status APPROVED",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative approving - Generate Portal Token (PagoPA Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalTokenPagopa\", textResponse);\r",
															"});\r",
															"\r",
															"//response time is less than 1s\r",
															"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Pagopa}}\",\r\n  \"name\": \"{{name_Pagopa}}\",\r\n  \"familyName\": \"{{familyName_Pagopa}}\",\r\n  \"email\": \"{{email_Pagopa}}\",\r\n  \"orgId\": \"{{orgId_Pagopa}}\",\r\n  \"orgVAT\": \"{{orgVAT_Pagopa}}\",\r\n  \"orgName\": \"Ente di test IdPay\",\r\n  \"orgPartyRole\": \"{{orgPartyRole_Pagopa}}\",\r\n  \"orgRole\": \"{{orgRole_Pagopa}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update initiative into APPROVED status",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative approving - PagoPA Admin update Initiative status into TO_CHECK -(Responses with 204)\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//setTimeout(function(){}, 20000); //milliseconds"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalTokenPagopa}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId}}/approved",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId}}",
														"approved"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ENTE - Initiative PUBLISHED",
									"item": [
										{
											"name": "Generate Portal Token Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative pubblication - Generate Portal Token (Ente Admin)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															"\r",
															"//response time is less than 1s\r",
															"tests[\"Response time is less than 1s\"] = responseTime < 1000;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"idpay.welfare.pagopa.it\",\r\n  \"uid\": \"{{uid_Ente}}\",\r\n  \"name\": \"{{name_Ente}}\",\r\n  \"familyName\": \"{{familyName_Ente}}\",\r\n  \"email\": \"{{email_Ente}}\",\r\n  \"orgId\": \"{{orgId_Ente}}\",\r\n  \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n  \"orgName\": \"{{orgPartyRole_Ente}}\",\r\n  \"orgPartyRole\": \"ADMIN\",\r\n  \"orgRole\": \"{{orgRole_Ente}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlToken}}/welfare/token/test",
													"host": [
														"{{baseUrlToken}}"
													],
													"path": [
														"welfare",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Initiative PUBLISHED",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Initiative pubblication - Ente Admin updates initiative status into PUBLISHED -(Responses with 204)\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 10000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrlInitiative}}/{{initiativeId}}/published",
													"host": [
														"{{baseUrlInitiative}}"
													],
													"path": [
														"{{initiativeId}}",
														"published"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Onboarding User with criteria",
									"item": [
										{
											"name": "Generate Token IO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Onboarding - Generate token IO', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{genericSubscriptionKey}}",
														"type": "default"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rtd",
														"mock-io",
														"login"
													],
													"query": [
														{
															"key": "fiscalCode",
															"value": "{{CF_fake}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Accept T&C",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Onboarding -  Accept T&C - Status 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 15000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{apimSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Prerequisites Check",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Onboarding - Prerequisites check - Status 200 or 202\", function () {\r",
															"    pm.expect(pm.response.code).to.be.oneOf([200,202]);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{apimSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/initiative",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														"initiative"
													]
												}
											},
											"response": []
										},
										{
											"name": "PDND + Autocertification",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Unhappy case - Iban - Enroll Iban without upper case letters - Onboarding - PDND + Autocertification - Status 202\", function () {\r",
															"    pm.response.to.have.status(202);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 10000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId}}\",\r\n    \"pdndAccept\": true,\r\n    \"selfDeclarationList\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/consent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														"consent"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Enroll Iban",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban not italian - enrolling iban - Responses with 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban not italian - enrolling iban - Message is Iban is not italian\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('GB29NWBK60161331926819 Iban is not italian');\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 15000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"iban\": \"GB29NWBK60161331926819\",\r\n    \"description\": \"conto cointestato\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/iban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"iban"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status Ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban not italian - Get Status - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban not italian - Get Status - Wallet status NOT_REFUNDABLE\", function () {\r",
													"    let responseJson = pm.response.json()\r",
													"    pm.expect(responseJson.status).to.be.eql('NOT_REFUNDABLE');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban not italian - Get Detail - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Enroll Iban field empty - 400",
							"item": [
								{
									"name": "Enroll Iban",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban empty field - enrolling iban - Responses with 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 15000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"iban\": \"\",\r\n    \"description\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId}}/iban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId}}",
												"iban"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Enroll Iban initiative not active -404",
							"item": [
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Unhappy case - Iban - Enroll iban initiative not active - Generate token IO', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_fake}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enroll Iban",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban initiative not active - enrolling iban - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban initiative not active - enrolling iban - Message is The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"iban\": \"{{IBAN_1}}\",\r\n    \"description\": \"conto cointestato\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId-draft}}/iban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId-draft}}",
												"iban"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban initiative not active - Get Status - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban initiative not active - Get Status - Message is The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId-draft}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId-draft}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Wallet Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban initiative not active - Get Detail - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy Case - Iban - Enroll iban initiative not active - Get Detail - Message is The requested initiative is not active for the current user!\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql('The requested initiative is not active for the current user!');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId-draft}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId-draft}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "GET Initiative Detail(CIT)",
					"item": [
						{
							"name": "Initiative Id fake - 404 - Not Found",
							"item": [
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('API GET Initiative Detail IO - Unhappy case - InitiativeId fake - Retrieve Token', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_fake}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Initiative Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"API GET Initiative Detail IO - Unhappy case - InitiativeId fake - Response status is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"API GET Initiative Detail IO - Unhappy case - InitiativeId fake - Response contains info about an unprocessable status\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.message).to.eql(`Initiative with initiativeId fake not found.`)\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiative_fake}}/detail",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiative_fake}}",
												"detail"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Initiative Not in status PUBLISHED or CLOSED - 404 - Not Found",
							"item": [
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('API GET Initiative Detail IO - Unhappy case - Initiative not in status PUBLISHED or CLOSED - CIT trying to get initiative detail of an initiative not in status PUBLISHED or CLOSED - Retrieve Token', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_fake}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Initiative Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"API GET Initiative Detail IO - Unhappy case - Initiative not in status PUBLISHED or CLOSED - CIT trying to get initiative detail of an initiative not in status PUBLISHED or CLOSED - Response status is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"API GET Initiative Detail IO - Unhappy case - Initiative not in status PUBLISHED or CLOSED - CIT trying to get initiative detail of an initiative not in status PUBLISHED or CLOSED - Response contains info about an unprocessable status\", function () {\r",
													"    const responseJson = pm.response.json();\r",
													"    const initiativeId = pm.collectionVariables.get(\"initiativeId-draft\");\r",
													"    pm.expect(responseJson.message).to.eql(`Initiative with initiativeId ${initiativeId} not found.`)\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{apimSubscriptionKey}}",
												"type": "text"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "{{Ocp-Apim-Trace}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId-draft}}/detail",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId-draft}}",
												"detail"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Enrollment IdPay Code",
					"item": [
						{
							"name": "Associate IDPAYCODE to initiative without generation",
							"item": [
								{
									"name": "Onboarding 3",
									"item": [
										{
											"name": "Generate Token IO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Wallet - Happy case - Initiative discount - Onboarding - Generate Token IO', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{genericSubscriptionKey}}",
														"type": "default"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake_3}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rtd",
														"mock-io",
														"login"
													],
													"query": [
														{
															"key": "fiscalCode",
															"value": "{{CF_fake_3}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Accept T&C",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - Accept T&C - return status 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 15000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{apimSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_idpaycode}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Prerequisites Check",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - Prerequisites Check - return status 200 or 202\", function () {\r",
															"    pm.expect(pm.response.code).to.be.oneOf([200,202]);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Ocp-Apim-Subscription-Key",
														"value": "{{apimSubscriptionKey}}",
														"type": "text"
													},
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_idpaycode}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/initiative",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														"initiative"
													]
												}
											},
											"response": []
										},
										{
											"name": "PDND + Autocertification",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Wallet - Happy case - Initiative discount - Onboarding - PDND + Autocertification - return status 202\", function () {\r",
															"    pm.response.to.have.status(202);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenIO}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"initiativeId\" : \"{{initiativeId_idpaycode}}\",\r\n    \"pdndAccept\": true,\r\n    \"selfDeclarationList\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/idpay/onboarding/consent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"idpay",
														"onboarding",
														"consent"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Associate IDPAYCODE to initiative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Enroll IDPAYCODE - Associate IDPAYCODE to initiative without generate IDPAYCODE - Responses with 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Enroll IDPAYCODE - Associate IDPAYCODE to initiative without generate IDPAYCODE - Check message is 'IdpayCode must be generated'\", function () {\r",
													"     const message = pm.response.json().message;\r",
													"     pm.expect(message).eq(\"IdpayCode must be generated\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/code/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"code",
												"instruments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get IDPAYCODE status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Enroll IDPAYCODE - Check status IDPAYCODE - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Enroll IDPAYCODE - Check status IDPAYCODE  - Verify IDPAYCODE is disabled\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse.isIdPayCodeEnabled).eq(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/code/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"code",
												"status"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Generate IDPAYCODE for initiative without onboarding",
							"item": [
								{
									"name": "Generate Token IO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Wallet - Happy case - Initiative discount - Onboarding - Generate Token IO', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 5000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{genericSubscriptionKey}}",
												"type": "default"
											},
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rtd/mock-io/login?fiscalCode={{CF_fake_4}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rtd",
												"mock-io",
												"login"
											],
											"query": [
												{
													"key": "fiscalCode",
													"value": "{{CF_fake_4}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate IDPAYCODE with initiativeId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Enroll IDPAYCODE - Generate IDPAYCODE with initiativeId - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Enroll IDPAYCODE - Generate IDPAYCODE with initiativeId - Check message is 'The requested initiative is not active for the current user!'\" , function () {\r",
													"    let message = pm.response.json().message;\r",
													"    pm.expect(message).eq(\"The requested initiative is not active for the current user!\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"initiativeId\":\"{{initiativeId_idpaycode}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/code/generate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"code",
												"generate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate IDPAYCODE without initiativeId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Enroll IDPAYCODE - Generate IDPAYCODE without initiativeId - Responses with 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Enroll IDPAYCODE - Generate IDPAYCODE without initiativeId  - Verify response body\", function () {\r",
													"    let jsonResponse = pm.response.json();\r",
													"    pm.expect(jsonResponse).have.property(\"idpayCode\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/code/generate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"code",
												"generate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Associate IDPAYCODE to initiative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Wallet - Unhappy case - Enroll IDPAYCODE - Associate IDPAYCODE to initiative without onboarding - Responses with 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Wallet - Unhappy case - Enroll IDPAYCODE - Associate IDPAYCODE to initiative without onboarding - Check message is 'The requested initiative is not active for the current user!'\", function () {\r",
													"     const message = pm.response.json().message;\r",
													"     pm.expect(message).eq(\"The requested initiative is not active for the current user!\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenIO}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/idpay/wallet/{{initiativeId_idpaycode}}/code/instruments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"idpay",
												"wallet",
												"{{initiativeId_idpaycode}}",
												"code",
												"instruments"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Delete initiatives",
			"item": [
				{
					"name": "Delete Initiative initiativeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Wallet - Delete Initiatives - Delete Initiative initiativeId - Status test 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative/idpay/initiative/{{initiativeId}}",
							"host": [
								"{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative"
							],
							"path": [
								"idpay",
								"initiative",
								"{{initiativeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Initiative initiativeId_idpaycode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Wallet - Delete Initiatives - Delete Initiative initiativeId_idpaycode - Status test 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative/idpay/initiative/{{initiativeId_idpaycode}}",
							"host": [
								"{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative"
							],
							"path": [
								"idpay",
								"initiative",
								"{{initiativeId_idpaycode}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Initiative initiativeId-draft",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"API GET Initiative Detail IO - Delete Initiatives - Delete Initiative initiativeId-draft - Status test 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative/idpay/initiative/{{initiativeId-draft}}",
							"host": [
								"{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative"
							],
							"path": [
								"idpay",
								"initiative",
								"{{initiativeId-draft}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Initiative initiativeEnrollWhitelist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Wallet - Delete initiatives - Delete Initiative initativeEnrollWhitelist - Status test 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative/idpay/initiative/{{initiativeEnrollWhitelist}}",
							"host": [
								"{{AKSAPIServerUrlGeneric}}idpayportalwelfarebackendinitiative"
							],
							"path": [
								"idpay",
								"initiative",
								"{{initiativeEnrollWhitelist}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "tokenIO",
			"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJSTExDTEQ5Mk0wOEE2NjJPIiwiaWF0IjoxNjc3NTg1NTIxLCJleHAiOjE2Nzc1ODkxMjF9.OpNGD0kDnbYGP810h83d2XjBlRpfqtQKjoafEekbO1o"
		},
		{
			"key": "serviceId - initiative with criteria",
			"value": "MOCKdevX21DC1KCY68H15SHEQZEMAZAOK"
		},
		{
			"key": "instrumentId",
			"value": "63fcc85e75ab5763c93c60b9"
		},
		{
			"key": "initiativeId-draft",
			"value": "63fc8961fea3f35a5644e72e"
		},
		{
			"key": "serviceId - self declaration",
			"value": "MOCKdevWI962QGAVKET21OPP0XYXXUYTL"
		},
		{
			"key": "serviceId - PI already used",
			"value": "MOCKdev6UHLVU5PYA9GS0UJQAUZN7RH4I"
		},
		{
			"key": "initiativeId-issuer",
			"value": "63fded4ffea3f35a5644e738"
		},
		{
			"key": "initiativeId-unsubscribed-issuer",
			"value": "63fe0fc2fea3f35a5644e739"
		},
		{
			"key": "serviceId - endDate",
			"value": "MOCKdevRT7SSUXXTV4DEAZE2NWR8LF4EW"
		},
		{
			"key": "serviceId - instrument-failed",
			"value": "MOCKdevVTDS9QUN1BWFWPIZGA090RE2IC"
		},
		{
			"key": "iban",
			"value": ""
		},
		{
			"key": "idwallet",
			"value": "110454"
		},
		{
			"key": "serviceId - test_associated",
			"value": "MOCKdevYNDW3OYHUL533E2YM8X88WWF3S"
		},
		{
			"key": "identityPortalToken",
			"value": ""
		},
		{
			"key": "serviceName",
			"value": ""
		},
		{
			"key": "description",
			"value": ""
		},
		{
			"key": "channel_type",
			"value": ""
		},
		{
			"key": "channel_contact",
			"value": ""
		},
		{
			"key": "budget",
			"value": ""
		},
		{
			"key": "beneficiaryType",
			"value": ""
		},
		{
			"key": "beneficiaryKnown",
			"value": ""
		},
		{
			"key": "rankingEnabled",
			"value": ""
		},
		{
			"key": "beneficiaryBudget",
			"value": ""
		},
		{
			"key": "rankingStartDate",
			"value": ""
		},
		{
			"key": "rankingEndDate",
			"value": ""
		},
		{
			"key": "startDate",
			"value": ""
		},
		{
			"key": "endDate",
			"value": ""
		},
		{
			"key": "rewardRuleType",
			"value": ""
		},
		{
			"key": "rewardValueType",
			"value": ""
		},
		{
			"key": "rewardRuleValue",
			"value": ""
		},
		{
			"key": "trxDaysOfWeek",
			"value": ""
		},
		{
			"key": "trxDayEndTime",
			"value": ""
		},
		{
			"key": "trxThresholdFrom",
			"value": ""
		},
		{
			"key": "trxThresholdTo",
			"value": ""
		},
		{
			"key": "trxCountFrom",
			"value": ""
		},
		{
			"key": "trxCountTo",
			"value": ""
		},
		{
			"key": "trxRewardLimitFrequency",
			"value": ""
		},
		{
			"key": "trxRewardLimitValue",
			"value": ""
		},
		{
			"key": "body",
			"value": ""
		},
		{
			"key": "identityPortalTokenPagopa",
			"value": ""
		},
		{
			"key": "initiative_fake",
			"value": "fake"
		},
		{
			"key": "idwallet_1",
			"value": "120753"
		},
		{
			"key": "initiativeId",
			"value": "64a57c68f604477a2463f8f0"
		},
		{
			"key": "familyUnitComposition",
			"value": ""
		},
		{
			"key": "familyId",
			"value": ""
		},
		{
			"key": "initiativeId_exhausted",
			"value": ""
		},
		{
			"key": "merchantId",
			"value": ""
		},
		{
			"key": "CF_fake",
			"value": "RNZPMP80A44X000M",
			"type": "string"
		},
		{
			"key": "initiativeIdWithWhitelist",
			"value": ""
		},
		{
			"key": "initiativeEnrollWhitelist",
			"value": "",
			"type": "string"
		},
		{
			"key": "CF_fake_2",
			"value": "DSUFLV81R19X000P",
			"type": "string"
		},
		{
			"key": "CF_fake_3",
			"value": "BRTVNL63E26X000U",
			"type": "string"
		},
		{
			"key": "CF_fake_4",
			"value": "BRNBNT22S45X000B",
			"type": "string"
		},
		{
			"key": "initiativeId_idpaycode",
			"value": "6512e6b7f494f74465e52f7f"
		},
		{
			"key": "idpayCode",
			"value": ""
		}
	]
}