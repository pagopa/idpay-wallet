asyncapi: 2.0.0
info:
  title: Wallet Service
  version: 1.0.0
  description: >-
    Its purpose is to manage the user initiatives budget info
tags:

  - name: "processTransaction"
    description: " Processing new transaction"
  - name: "processRefund"
    description: " Processing new refund"
  - name: "deleteInitiative"
    description: "Delete initiative process"
  - name: "deleteIban"
    description: "Delete iban process"
  - name: "createWallet"
    description: "Create wallet process"

  - name: "enrollIbanError"
    description: "Enroll iban error"
  - name: "rewardTransactionError"
    description: "Processing new transaction error"
  - name: "notificationError"
    description: "Send event to notification error"
  - name: "timelineError"
    description: "Send event to timeline error"

  - name: "ibanEnrollment"
    description: "Send iban enrollment event to idpay-iban"

  - name: "checkIbanToNotification"
    description: "Send check iban ko event to notification "
  - name: "refundToNotification"
    description: "Send refund event to notification "
  - name: "suspensionReadmissionToNotification"
    description: "Send suspension readmission event to notification "

  - name: "suspendToTimeline"
    description: "Send suspended wallet event to timeline"
  - name: "readmitToTimeline"
    description: "Send readmitted event to timeline"
  - name: "onboardingToTimeline"
    description: "Send onboarded event to timeline"
  - name: "unsubscribeToTimeline"
    description: "Send unsubscribed event to timeline"
  - name: "deleteInstrumentToTimeline"
    description: "Send deleted instrument event to timeline"
  - name: "ackToTimeline"
    description: "Send acknowldged event to timeline"
  - name: "refundToTimeline"
    description: "Send refunded event to timeline"
  - name: "transactionToTimeline"
    description: "Send transaction event to timeline"
  - name: "ibanToTimeline"
    description: "Send iban outcome event to timeline"
  - name: "rejectedInstrumentToTimeline"
    description: "Send rejected instrument event to timeline"

channels:
  wallet-process-transacion:
    subscribe:
      message:
        $ref: '#/components/messages/ProcessTransaction'
      bindings:
        kafka:
          topic: idpay_transaction_topic
      tags:
        - name: "processTransaction"
  wallet-process-refund:
    subscribe:
      message:
        $ref: '#/components/messages/ProcessRefund'
      bindings:
        kafka:
          topic: idpay_reward_notification_response_topic
      tags:
        - name: "processRefund"
  wallet-delete-initiative:
    subscribe:
      message:
        $ref: '#/components/messages/DeleteInitiative'
      bindings:
        kafka:
          topic: idpay-commands
      tags:
        - name: "deleteInitiative"
  wallet-detete-iban:
    subscribe:
      message:
        $ref: '#/components/messages/DeleteIban'
    bindings:
      kafka:
        topic: Idpay_checkiban_outcome_topic
      tags:
        - name: "deleteIban"
  wallet-create:
    subscribe:
      message:
        $ref: '#/components/messages/CreateWallet'
    bindings:
      kafka:
        topic: idpay_onboarding_outcome_topic
      tags:
        - name: "createWallet"
  wallet-enroll-iban-error:
    publish:
      message:
        $ref: '#/components/messages/EnrollIbanError'
    bindings:
      kafka:
        topic: idpay_error_topic
      tags:
        - name: "enrollIbanError"
  wallet-process-transacion-error:
    publish:
      message:
        $ref: '#/components/messages/RewardTransactionError'
    bindings:
      kafka:
        topic: idpay_error_topic
      tags:
        - name: "rewardTransactionError"
  wallet-send-to-notification-error:
    publish:
      message:
        $ref: '#/components/messages/NotificationError'
    bindings:
      kafka:
        topic: idpay_error_topic
      tags:
        - name: "notificationError"
  wallet-send-to-timeline-error:
    publish:
      message:
        $ref: '#/components/messages/TimelineError'
    bindings:
      kafka:
        topic: idpay_error_topic
      tags:
        - name: "timelineError"
  wallet-send-enrollment-iban-to-iban:
    publish:
      message:
        $ref: '#/components/messages/IbanQueue'
    bindings:
      kafka:
        topic: idpay_checkiban_evaluation_topic
      tags:
        - name: "ibanEnrollment"
  wallet-send-check-iban-to-notification:
    publish:
      message:
        $ref: '#/components/messages/CheckIbanToNotification'
    bindings:
      kafka:
        topic: idpay_notification_request_topic
      tags:
        - name: "checkIbanToNotification"
  wallet-send-refund-to-notification:
    publish:
      message:
        $ref: '#/components/messages/RefundToNotification'
    bindings:
      kafka:
        topic: idpay_notification_request_topic
      tags:
        - name: "refundToNotification"
  wallet-send-suspension-readmission-to-notification:
    publish:
      message:
        $ref: '#/components/messages/SuspensionReadmissionToNotification'
    bindings:
      kafka:
        topic: idpay_notification_request_topic
      tags:
        - name: "suspensionReadmissionToNotification"
  wallet-suspend-to-timeline:
    publish:
      message:
        $ref: '#/components/messages/SuspendToTimeline'
    bindings:
      kafka:
        topic: idpay_timeline_topic
      tags:
        - name: "suspendToTimeline"
  wallet-readmit-to-timeline:
    publish:
      message:
        $ref: '#/components/messages/ReadmitToTimeline'
    bindings:
      kafka:
        topic: idpay_timeline_topic
      tags:
        - name: "readmitToTimeline"
  wallet-onboarding-to-timeline:
    publish:
      message:
        $ref: '#/components/messages/OnboardingToTimeline'
    bindings:
      kafka:
        topic: idpay_timeline_topic
      tags:
        - name: "onboardingToTimeline"
  wallet-unsubscribe-to-timeline:
    publish:
      message:
        $ref: '#/components/messages/UnsubscribeToTimeline'
    bindings:
      kafka:
        topic: idpay_timeline_topic
      tags:
        - name: "unsubscribeToTimeline"
  wallet-delete-instrument-to-timeline:
    publish:
      message:
        $ref: '#/components/messages/DeleteInstrumentToTimeline'
    bindings:
      kafka:
        topic: idpay_timeline_topic
      tags:
        - name: "deleteInstrumentToTimeline"
  wallet-ack-to-timeline:
    publish:
      message:
        $ref: '#/components/messages/AckToTimeline'
    bindings:
      kafka:
        topic: idpay_timeline_topic
      tags:
        - name: "ackToTimeline"
  wallet-refund-to-timeline:
    publish:
      message:
        $ref: '#/components/messages/RefundToTimeline'
    bindings:
      kafka:
        topic: idpay_timeline_topic
      tags:
        - name: "refundToTimeline"
  wallet-transaction-to-timeline:
    publish:
      message:
        $ref: '#/components/messages/TransactionToTimeline'
    bindings:
      kafka:
        topic: idpay_timeline_topic
      tags:
        - name: "transactionToTimeline"
  wallet-rejected-instrument-to-timeline:
    publish:
      message:
        $ref: '#/components/messages/RejectedInstrumentToTimeline'
    bindings:
      kafka:
        topic: idpay_timeline_topic
      tags:
        - name: "rejectedInstrumentToTimeline"
  wallet-iban-to-timeline:
    publish:
      message:
        $ref: '#/components/messages/IbanToTimeline'
    bindings:
      kafka:
        topic: idpay_timeline_topic
      tags:
        - name: "ibanToTimeline"
components:
  messages:
    ProcessTransaction:
      contentType: application/json
      description: >-
        Event sent to the application when a transaction is rewarded
      summary: Informs the application of a rewarded transaction and to update the user's wallet
      payload:
        $ref: "#/components/schemas/RewardTransactionDTO"
    ProcessRefund:
      contentType: application/json
      description: >-
        Event sent to the application when a transaction is refunded
      summary: Informs the application of a refunded transaction and to update the user's wallet
      payload:
        $ref: "#/components/schemas/RefundDTO"
    DeleteInitiative:
      contentType: application/json
      description: >-
        Event consumed from application when a delete initiative command has published
      summary: Delete documents of the initiative
      payload:
        $ref: "#/components/schemas/QueueCommandOperationDTO"
    DeleteIban:
      contentType: application/json
      description: >-
        Event consumed from application when a delete iban command has published
      summary: Delete documents of the iban
      payload:
        $ref: "#/components/schemas/IbanQueueWalletDTO"
    CreateWallet:
      contentType: application/json
      description: >-
        Event consumed from application when a create wallet command has published
      summary: Create document of a wallet
      payload:
        $ref: "#/components/schemas/EvaluationDTO"

    EnrollIbanError:
      contentType: application/json
      description: >-
        Event sent when an error occurred while sending message to IBAN
      summary:  Informs of an error occured while sending message to IBAN
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "#/components/schemas/IbanQueueDTO"
    RewardTransactionError:
      contentType: application/json
      description: >-
        Event sent when an error occurred while update wallet from transaction
      summary: Informs of an error occurred while update wallet from transaction
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "#/components/schemas/RewardTransactionDTO"
    NotificationError:
      contentType: application/json
      description: >-
        Event sent when an error occurred while sending message to Notification
      summary: Informs of an error occured while sending message to Notification
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "#/components/schemas/NotificationQueueDTO"
    TimelineError:
      contentType: application/json
      description: >-
        Event sent when an error occurred while sending message to Timeline
      summary: Informs of an error occured while sending message to Timeline
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"

    IbanQueue:
      contentType: application/json
      description: >-
        Event produced to inform IBAN of the enrollment
      summary:  Informs of IBAN of the enrollment
      headers:
        $ref: "#/components/schemas/HeaderProducer"
      payload:
        $ref: "#/components/schemas/IbanQueueDTO"

    CheckIbanToNotification:
      contentType: application/json
      description: >-
        Event produced to inform Notificaion of a check iban KO
      summary: Informs Notificaion of a check iban KO
      payload:
        $ref: "#/components/schemas/NotificationQueueDTO"
    RefundToNotification:
      contentType: application/json
      description: >-
        Event produced to inform Notificaion of a refund
      summary: Informs Notificaion of a refund
      payload:
        $ref: "#/components/schemas/NotificationQueueDTO"
    SuspensionReadmissionToNotification:
      contentType: application/json
      description: >-
        Event produced to inform Notificaion  of a suspension or readmission
      summary: Informs Notificaion  of a suspension or readmission
      payload:
        $ref: "#/components/schemas/NotificationQueueDTO"

    SuspendToTimeline:
      contentType: application/json
      description: >-
        Event produced to inform Timeline of a wallet suspension
      summary: Informs Timeline of a a wallet suspension
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"
    ReadmitToTimeline:
      contentType: application/json
      description: >-
        Event produced to inform Timeline of a wallet readmission
      summary: Informs Timeline of a wallet readmission
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"
    OnboardingToTimeline:
      contentType: application/json
      description: >-
        Event produced to inform Timeline of an onboarding
      summary: Informs Timeline of an onboarding
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"
    UnsubscribeToTimeline:
      contentType: application/json
      description: >-
        Event produced to inform Timeline of a wallet disabling
      summary: Informs Timeline of a wallet disabling
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"
    DeleteInstrumentToTimeline:
      contentType: application/json
      description: >-
        Event produced to inform Timeline of a pay instrument removal
      summary: Informs Timeline of a pay instrument removal
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"
    AckToTimeline:
      contentType: application/json
      description: >-
        Event produced to inform Timeline of an acknowledgement
      summary: Informs Timeline of an acknowledgement
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"
    RefundToTimeline:
      contentType: application/json
      description: >-
        Event produced to inform Timeline of a refund
      summary: Informs Timeline of a refund
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"
    TransactionToTimeline:
      contentType: application/json
      description: >-
        Event produced to inform Timeline of a transaction
      summary: Informs Timeline of a transaction
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"
    RejectedInstrumentToTimeline:
      contentType: application/json
      description: >-
        Event produced to inform Timeline of a rejected instrument
      summary: Informs Timeline of a rejected instrument
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"
    IbanToTimeline:
      contentType: application/json
      description: >-
        Event produced to inform Timeline of a process ended successfully
      summary: Informs Timeline of a process ended successfully
      payload:
        $ref: "#/components/schemas/QueueOperationDTO"

  schemas:
    RewardTransactionDTO:
      allOf:
        - $ref: "#/components/schemas/TransactionDTO"
      type: object
      properties:
        status:
          type: string
          description: Status of the transaction
          example: REWARDED
        rejectionReasons:
          type: array
          description: 	List of strings containing the codes of any rejects
          items:
            type: string
          example: ["Insufficient balance", "Invalid transaction"]
        initiativeRejectionReasons:
          type: object
          description: Map [Initiative ID - List of codes of any discards for the individual initiative]
          properties:
            initiativeId:
              type: string
            rejectionReasons:
              type: array
              additionalProperties:
                type: string
          example:
            initiative_id_1: ["Insufficient funds", "Expired initiative"]
            initiative_id_2: ["Invalid user", "Expired initiative"]
        rewards:
          type: object
          description: Map [Initiative ID - Reward]
          properties:
            initiativeId:
              type: string
            reward:
              type: object
              $ref: "#/components/schemas/RewardDTO"
        elaborationDateTime:
          type: string
          format: date-time
          description: Date and time of elaboration
          example: "2024-04-10T07:41:46.773672195"
        trxChargeDate:
          type: string
          format: date-time
          description: Transaction charge date
          example: "2024-04-10T07:41:39.22+02:00"
    RefundDTO:
      type: object
      properties:
        id:
          type: string
          description: ID of the refund transaction
          example: ad300230-3f80-41f5-a5fc-70b1d47312d4_1712727698644
        externalId:
          type: string
          description: Identifier to be used during exports, created because the original identifier contains the userId
          example: ext_12345
        rewardNotificationId:
          type: string
          description: Delivery Identifier
          example: notif_67890
        initiativeId:
          type: string
          description: ID of the initiative associated with the refund
          example: 661626073785876cb5aa7601
        beneficiaryId:
          type: string
          description: ID of the beneficiary
          example: bcf3651c-d2d3-4998-81a9-5f24302ab674
        beneficiaryType:
          type: string
          description: Type of beneficiary
          enum:
            - CITIZEN
            - MERCHANT
          example: CITIZEN
        organizationId:
          type: string
          description: ID of the organization
          example: org_12345
        iban:
          type: string
          description: IBAN of the
          example: IT60X0542811101000000123456
        status:
          type: string
          description: Status of the refund
          example: PENDING
        rewardStatus:
          type: string
          description: Status of the reward
          example: REWARDED
        refundType:
          type: string
          description: Type of refund
          example: ORDINARY
        rewardCents:
          type: integer
          format: int64
          description: Amount of the reward in cents
          example: 30000
        effectiveRewardCents:
          type: integer
          format: int64
          description: Effective amount of the reward in cents
          example: 27000
        startDate:
          type: string
          format: date
          description: Start date of the initiative
          example: "2024-04-01"
        endDate:
          type: string
          format: date
          description: End date of the initiative
          example: "2024-04-30"
        feedbackDate:
          type: string
          format: date-time
          description: Event reception timestamp
          example: "2024-04-15T10:30:00"
        rejectionCode:
          type: string
          description: Code of rejection
          example: ERR_001
        rejectionReason:
          type: string
          description: Reason for rejection
          example: Insufficient funds
        feedbackProgressive:
          type: integer
          format: int64
          description: Progressive number of feedback obtained on the same notification
          example: 1
        executionDate:
          type: string
          format: date
          description: Date of execution of the transfer
          example: "2024-05-01"
        transferDate:
          type: string
          format: date
          description: Date of transfer
          example: "2024-05-02"
        userNotificationDate:
          type: string
          format: date
          description: Date of user notification
          example: "2024-05-03"
        cro:
          type: string
          description: CRO of Payment Arrangement
          example: CRO1234567890
    TransactionDTO:
      type: object
      properties:
        id:
          type: string
          description: ID of the transaction
          example: ad300230-3f80-41f5-a5fc-70b1d47312d4
        idTrxAcquirer:
          type: string
          description: ID of the acquiring transaction
          example: "198937549309371755007410777179935955803"
        acquirerCode:
          type: string
          description: Acquirer code
          example: acquirerCode
        trxDate:
          type: string
          format: date-time
          description: Transaction date
          example: "2024-04-10T07:41:38.644+02:00"
        brandLogo:
          type: string
          description: Logo of the brand
        brand:
          type: string
          description: brand
        maskedPan:
          type: string
          description: Masked PAN
          example: 1234XXXXXXXX5678
        instrumentId:
          type: string
          description: ID of the instrument used in the transaction
          example: inst_12345
        operationType:
          type: string
          description: Operation typef
          example: "00"
        circuitType:
          type: string
          description: Type of circuit
          example: circuitType
        idTrxIssuer:
          type: string
          description: ID of the transaction issuer
          example: APIMREQUESTID
        correlationId:
          type: string
          description: Correlation ID
          example: ad300230-3f80-41f5-a5fc-70b1d47312d4_1712727698644
        amountCents:
          type: integer
          format: int64
          description: Amount of the transaction in cents
          example: 900000000
        amountCurrency:
          type: string
          description: Currency of the transaction amount
          example: EUR
        mcc:
          type: string
          description: Merchant category code
          example: "1234"
        acquirerId:
          type: string
          description: ID of the acquirer
          example: PAGOPA
        merchantId:
          type: string
          description: ID of the merchant
          example: b0d4c930-3f77-3959-8609-8c1e177966a0
        terminalId:
          type: string
          description: ID of the terminal
          example: term_12345
        bin:
          type: string
          description: Bank Identification Number
          example: 123456
        senderCode:
          type: string
          description: Sender code
          example: user123
        fiscalCode:
          type: string
          description: Fiscal code
          example: "82186210454"
        vat:
          type: string
          description: vat code of the merchant
          example: "82186210454"
        posType:
          type: string
          example: Online
        par:
          type: string
          example: par_12345
        userId:
          type: string
          description: ID of the user associated with the transaction
          example: bcf3651c-d2d3-4998-81a9-5f24302ab674
        effectiveAmountCents:
          type: integer
          format: int64
          description: Effective amount of the transaction in cents
          example: 9000000
        channel:
          type: string
          description: Channel of origin
          example: APP_IO
        businessName:
          type: string
          description: Name of the business associated with the transaction
          example: Merchant
    RewardDTO:
      type: object
      properties:
        accruedRewardCents:
          type: integer
          format: int64
          description: Reward updated after evaluation of any limits (budget, ecc...)
          example: 30000
        capped:
          type: boolean
          description: If the premium has been limited due to the beneficiary's budget
          example: false
        dailyCapped:
          type: boolean
          description: If the premium has been reached, it causes a daily limit
          example: false
        monthlyCapped:
          type: boolean
          description: If the premium has been reached, it causes a monthly limit
          example: false
        yearlyCapped:
          type: boolean
          description: If the premium has been reached, it causes an annual limit
          example: false
        weeklyCapped:
          type: boolean
          description: If the premium has been reached due to weekly limit
          example: false
        counters:
          $ref: "#/components/schemas/Counter"
    Counter:
      type: object
      properties:
        trxNumber:
          type: integer
          format: int64
          description: transaction number
          example: 1
        totalRewardCents:
          type: integer
          format: int64
          description: Total reward in cents
          example: 30000
        totalAmountCents:
          type: integer
          format: int64
          description: Total amount in cents
          example: 900000
        exhaustedBudget:
          type: boolean
          description: If the budget is exhausted
          example: true
        initiativeBudgetCents:
          type: integer
          format: int64
          description: Initiative budget in cents
          example: 30000
        version:
          type: integer
          format: int64
          description: Sequence operation number
          example: 1
    QueueCommandOperationDTO:
      type: object
      properties:
        operationType:
          type: string
          description: Constant that define operation type
          example: DELETE_INITIATIVE
        entityId:
          type: string
          description: familyId if the initiative is family-based or userId otherwise
          example: 66176f4e3785876cb5aa764d
        operationTime:
          type: string
          format: date-time
          description: operation time
          example: "2024-04-11T07:23:08.874869466"
    EvaluationDTO:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user
          notEmpty: true
          example: bcf3651c-d2d3-4998-81a9-5f24302ab674
        familyId:
          type: string
          description: ID of the family
        initiativeId:
          type: string
          description: ID of the initiative
          notEmpty: true
          example: 661626073785876cb5aa7601
        initiativeName:
          type: string
          description: Name of the initiative
        initiativeEndDate:
          type: string
          format: date
          description: End date of the initiative
        organizationId:
          type: string
          description: ID of the organization
        status:
          type: string
          description: status
          notEmpty: true
          example: status
        admissibilityCheckDate:
          type: string
          format: date-time
          description: Date of admissibility check
          notNull: true
        criteriaConsensusTimestamp:
          type: string
          format: date-time
          description: Timestamp of criteria consensus
        onboardingRejectionReasons:
          type: array
          description: List of onboarding rejection reasons
          items:
            $ref: "#/components/schemas/OnboardingRejectionReason"
          notNull: true
        beneficiaryBudgetCents:
          type: integer
          format: int64
          description: Budget for beneficiaries in cents
        initiativeRewardType:
          type: string
          description: Type of reward for the initiative
        organizationName:
          type: string
          description: Name of the organization
        isLogoPresent:
          type: boolean
          description: Indicates if the organization's logo is present
        maxTrx:
          type: integer
          format: int64
          description: Maximum number of transactions
    OnboardingRejectionReason:
      type: object
      properties:
        type:
          type: string
          description: Type of rejection reason
          notNull: true
          example: type
        code:
          type: string
          description: Code of the rejection reason
          notNull: true
          example: ERR001
        authority:
          type: string
          description: authority
          example: authority
        authorityLabel:
          type: string
          description: Label for the authority
          example: authorityLabel
        detail:
          type: string
          description: Additional detail about the rejection reason
          example: Insufficient funds in the account
    IbanQueueDTO:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user
          example: bcf3651c-d2d3-4998-81a9-5f24302ab674
        initiativeId:
          type: string
          description: ID of the initiative
          example: 661626073785876cb5aa7601
        iban:
          type: string
          description: IBAN (International Bank Account Number)
          example: IT60X0542811101000000123456
        description:
          type: string
          description: description
          example: description
        queueDate:
          type: string
          description: Date of queuing
          format: date-time
          example: "2024-04-10T09:15:30Z"
        channel:
          type: string
          description: Channel of origin
          example: APP_IO
    ErrorQueueHeader:
      type: object
      properties:
        group:
          type: string
          description: The Kafka group to which the error message belongs.
          example: "group"
        srcType:
          type: string
          description: The type of the source of the error message.
          example: "kafka"
        srcServer:
          type: string
          description: The source server of the error message.
          example: cstar-u-idpay-evh-ns-00.servicebus.windows.net:9093
        srcTopic:
          type: string
          description: The Kafka topic of the source of the error message.
          example: idpay-transaction
        description:
          type: string
          description: Description of the error.
          example: "[CONFIRM_PAYMENT] An error occurred while publishing the 
                    confirmation Payment result"
        retryable:
          type: boolean
          description: Indicates whether the error is retryable or not.
        stacktrace:
          type: string
          description: The stack trace of the error.
          example: "InternalServerErrorException -> Something gone wrong while Confirm Payment notify"
        rootCauseClass:
          type: string
          description: Cause class of the error.
          example: "java.lang.InternalServerErrorException"
        rootCauseMessage:
          type: string
          description: Message of the error.
          example: "Something gone wrong while Confirm Payment notify"
    QueueOperationDTO:
      type: object
      properties:
        userId:
          type: string
          description: User ID
          example: bcf3651c-d2d3-4998-81a9-5f24302ab674
        initiativeId:
          type: string
          description: Initiative ID
          example: 661626073785876cb5aa7601
        operationType:
          type: string
          description: Type of operation
          example: operationType
        rewardNotificationId:
          type: string
          description: Delivery Identifier
          example: notif_67890
        eventId:
          type: string
          description: Event ID
          example: EVT1234567890
        brandLogo:
          type: string
          description: Brand logo
        brand:
          type: string
          description: Brand
        maskedPan:
          type: string
          description: Masked PAN (Primary Account Number)
          example: 1234********5678
        instrumentId:
          type: string
          description: Instrument ID
          example: INSTR1234567890
        iban:
          type: string
          description: IBAN (International Bank Account Number)
          example: IT60X0542811101000000123456
        channel:
          type: string
          description: Channel of origin
          example: APP_IO
        instrumentType:
          type: string
          description: Instrument type
          example: instrumentType
        circuitType:
          type: string
          description: Type of circuit
          example: circuitType
        cro:
          type: string
          description: CRO of Payment Arrangement
          example: CRO1234567890
        operationDate:
          type: string
          format: date-time
          description: Operation date
          example: "2024-04-10T07:41:38.644+02:00"
        rewardFeedbackProgressive:
          type: integer
          format: int64
          description: Reward progressive number of feedback obtained on the same notification
          example: 12345
        amountCents:
          type: integer
          format: int64
          description: Amount in cents
          example: 9000000
        effectiveAmountCents:
          type: integer
          format: int64
          description: Effective amount in cents
          example: 9000000
        accruedCents:
          type: integer
          format: int64
          description: Accrued amount in cents
          example: 0
        idTrxIssuer:
          type: string
          description: Transaction issuer ID
          example: APIMREQUESTID
        idTrxAcquirer:
          type: string
          description: Transaction acquirer ID
          example: "198937549309371755007410777179935955803"
        status:
          type: string
          description: Status of transaction
          example: PENDING
        refundType:
          type: string
          description: Refund type
          example: refundType
        startDate:
          type: string
          format: date
          description: Initiative start date
          example: "2024-04-10"
        endDate:
          type: string
          format: date
          description: Initiative end date
          example: "2024-04-15"
        transferDate:
          type: string
          format: date
          description: Transfer date
          example: "2024-04-15"
        userNotificationDate:
          type: string
          format: date
          description: Date of user notification
          example: "2024-04-16"
        businessName:
          type: string
          description: Name of the business associated with the transaction
          example: Merchant
    NotificationQueueDTO:
      type: object
      properties:
        operationType:
          type: string
          description: Type of operation
          example: "REFUND"
        userId:
          type: string
          description: User ID
          example: "bcf3651c-d2d3-4998-81a9-5f24302ab674"
        initiativeId:
          type: string
          description: Initiative ID
          example: "661626073785876cb5aa7601"
        iban:
          type: string
          description: IBAN (International Bank Account Number)
          example: "IT60X0542811101000000123456"
        status:
          type: string
          description: Status of refund
        rewardNotificationId:
          type: string
          description: Delivery Identifier
          example: notif_67890
        refundCro:
          type: string
          description: CRO of refund
          example: CRO1234567890
        refundDate:
          type: string
          format: date
          description: Refund date
          example: "2024-04-15"
        refundReward:
          type: integer
          format: int64
          description: Refund reward
          example: 30000
        rejectionCode:
          type: string
          description: Rejection code
          example: "ERR001"
        rejectionReason:
          type: string
          description: Rejection reason
          example: "Insufficient funds"
        refundFeedbackProgressive:
          type: integer
          format: int64
          description: Refund feedback progressive
          example: 12345
        initiativeName:
          type: string
          description: Initiative name
          example: "Initiative name"
    HeaderProducer:
      type: object
      properties:
        kafka_messageKey:
          type: string
          description: "Key of the Kafka message"
          example: "661626073785876cb5aa7601"
    IbanQueueWalletDTO:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user
          example: bcf3651c-d2d3-4998-81a9-5f24302ab674
        initiativeId:
          type: string
          description: ID of the initiative
          example: 661626073785876cb5aa7601
        iban:
          type: string
          description: IBAN (International Bank Account Number)
          example: IT60X0542811101000000123456
        status:
          type: string
          description: Iban status
          example: OK
        queueDate:
          type: string
          description: Date of queuing
          format: date-time
          example: "2024-04-10T09:15:30Z"
        channel:
          type: string
          description: Channel of origin
          example: APP_IO